<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Snippets' => 
    array (
      '9fa151f629cec5174ec2772989b7606e' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"AjaxUpload","description":"Show upload button for uploading multiple files with progress-bar","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * AjaxUpload\\n *\\n * @package ajaxupload\\n * @subpackage snippet\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\/\\n$ajaxuploadCorePath = $modx->getOption(\'ajaxupload.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsPath = $modx->getOption(\'ajaxupload.assets_path\', null, $modx->getOption(\'assets_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsUrl = $modx->getOption(\'ajaxupload.assets_url\', null, $modx->getOption(\'assets_url\') . \'components\\/ajaxupload\\/\');\\n$debug = $modx->getOption(\'debug\', $scriptProperties, $modx->getOption(\'ajaxupload.debug\', null, false), true);\\n\\nif (!$modx->loadClass(\'AjaxUpload\', $ajaxuploadCorePath . \'model\\/ajaxupload\\/\', true, true)) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not load AjaxUpload class.\', \'\', \'AjaxUpload\');\\n    if ($debug) {\\n        return \'Could not load AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\n\\n$scriptProperties[\'core_path\'] = $ajaxuploadCorePath;\\n$scriptProperties[\'assets_path\'] = $ajaxuploadAssetsPath;\\n$scriptProperties[\'assets_url\'] = $ajaxuploadAssetsUrl;\\n$ajaxUpload = new AjaxUpload($modx, $scriptProperties);\\nif (!$ajaxUpload->initialize($scriptProperties)) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not initialize AjaxUpload class.\', \'\', \'AjaxUpload\');\\n    if ($debug) {\\n        return \'Could not load initialize AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\nreturn $ajaxUpload->output() . $ajaxUpload->debugOutput();","locked":0,"properties":"a:10:{s:3:\\"uid\\";a:7:{s:4:\\"name\\";s:3:\\"uid\\";s:4:\\"desc\\";s:25:\\"ajaxupload.ajaxupload.uid\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"language\\";a:7:{s:4:\\"name\\";s:8:\\"language\\";s:4:\\"desc\\";s:30:\\"ajaxupload.ajaxupload.language\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"allowedExtensions\\";a:7:{s:4:\\"name\\";s:17:\\"allowedExtensions\\";s:4:\\"desc\\";s:39:\\"ajaxupload.ajaxupload.allowedExtensions\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:16:\\"jpg,jpeg,png,gif\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"maxFilesizeMb\\";a:7:{s:4:\\"name\\";s:13:\\"maxFilesizeMb\\";s:4:\\"desc\\";s:35:\\"ajaxupload.ajaxupload.maxFilesizeMb\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"8\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"maxFiles\\";a:7:{s:4:\\"name\\";s:8:\\"maxFiles\\";s:4:\\"desc\\";s:30:\\"ajaxupload.ajaxupload.maxFiles\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:1:\\"3\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"thumbX\\";a:7:{s:4:\\"name\\";s:6:\\"thumbX\\";s:4:\\"desc\\";s:28:\\"ajaxupload.ajaxupload.thumbX\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"thumbY\\";a:7:{s:4:\\"name\\";s:6:\\"thumbY\\";s:4:\\"desc\\";s:28:\\"ajaxupload.ajaxupload.thumbY\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"100\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"addJquery\\";a:7:{s:4:\\"name\\";s:9:\\"addJquery\\";s:4:\\"desc\\";s:31:\\"ajaxupload.ajaxupload.addJquery\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"addJscript\\";a:7:{s:4:\\"name\\";s:10:\\"addJscript\\";s:4:\\"desc\\";s:32:\\"ajaxupload.ajaxupload.addJscript\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"addCss\\";a:7:{s:4:\\"name\\";s:6:\\"addCss\\";s:4:\\"desc\\";s:28:\\"ajaxupload.ajaxupload.addCss\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * AjaxUpload\\n *\\n * @package ajaxupload\\n * @subpackage snippet\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n *\\/\\n$ajaxuploadCorePath = $modx->getOption(\'ajaxupload.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsPath = $modx->getOption(\'ajaxupload.assets_path\', null, $modx->getOption(\'assets_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsUrl = $modx->getOption(\'ajaxupload.assets_url\', null, $modx->getOption(\'assets_url\') . \'components\\/ajaxupload\\/\');\\n$debug = $modx->getOption(\'debug\', $scriptProperties, $modx->getOption(\'ajaxupload.debug\', null, false), true);\\n\\nif (!$modx->loadClass(\'AjaxUpload\', $ajaxuploadCorePath . \'model\\/ajaxupload\\/\', true, true)) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not load AjaxUpload class.\', \'\', \'AjaxUpload\');\\n    if ($debug) {\\n        return \'Could not load AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\n\\n$scriptProperties[\'core_path\'] = $ajaxuploadCorePath;\\n$scriptProperties[\'assets_path\'] = $ajaxuploadAssetsPath;\\n$scriptProperties[\'assets_url\'] = $ajaxuploadAssetsUrl;\\n$ajaxUpload = new AjaxUpload($modx, $scriptProperties);\\nif (!$ajaxUpload->initialize($scriptProperties)) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not initialize AjaxUpload class.\', \'\', \'AjaxUpload\');\\n    if ($debug) {\\n        return \'Could not load initialize AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\nreturn $ajaxUpload->output() . $ajaxUpload->debugOutput();"}',
        'guid' => 'df57c45cd4d82454b9d06b2fa65e0760',
        'native_key' => NULL,
        'signature' => 'd45d939ebbfd93e8dad4110e44121e44',
      ),
      'dbfe13ef63a259d5dce244d5c9eab6b4' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"AjaxUpload2Formit","description":"AjaxUpload Formit hook. Save the upload queue into Formit field.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * AjaxUpload2Formit\\n *\\n * @package ajaxupload\\n * @subpackage hook\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var fiHooks $hook\\n *\\/\\n$ajaxuploadCorePath = $modx->getOption(\'ajaxupload.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsPath = $modx->getOption(\'ajaxupload.assets_path\', null, $modx->getOption(\'assets_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsUrl = $modx->getOption(\'ajaxupload.assets_url\', null, $modx->getOption(\'assets_url\') . \'components\\/ajaxupload\\/\');\\n\\n$ajaxuploadFieldname = $modx->getOption(\'ajaxuploadFieldname\', $scriptProperties, \'\');\\n$ajaxuploadFieldformat = $modx->getOption(\'ajaxuploadFieldformat\', $scriptProperties, \'csv\');\\n$ajaxuploadTarget = $modx->getOption(\'ajaxuploadTarget\', $scriptProperties, \'\');\\n$scriptProperties[\'debug\'] = (bool)$modx->getOption(\'ajaxuploadDebug\', $scriptProperties, $modx->getOption(\'ajaxupload.debug\', null, false));\\n$scriptProperties[\'uid\'] = $modx->getOption(\'ajaxuploadUid\', $scriptProperties, \'\');\\n$scriptProperties[\'cacheExpires\'] = $modx->getOption(\'ajaxuploadCacheExpires\', $scriptProperties, $modx->getOption(\'ajaxupload.cache_expires\', null, \'4\'));\\n$scriptProperties[\'clearQueue\'] = (bool)$modx->getOption(\'ajaxuploadClearQueue\', $scriptProperties, false, true);\\n$scriptProperties[\'allowOverwrite\'] = (bool)$modx->getOption(\'ajaxuploadAllowOverwrite\', $scriptProperties, true, true);\\n\\n$debug = $scriptProperties[\'debug\'];\\n\\nif (!$modx->loadClass(\'AjaxUpload\', $ajaxuploadCorePath . \'model\\/ajaxupload\\/\', true, true)) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not load AjaxUpload class.\', \'\', \'AjaxUpload2Formit\');\\n    if ($debug) {\\n        return \'Could not load AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\n\\n$scriptProperties[\'core_path\'] = $ajaxuploadCorePath;\\n$scriptProperties[\'assets_path\'] = $ajaxuploadAssetsPath;\\n$scriptProperties[\'assets_url\'] = $ajaxuploadAssetsUrl;\\n$ajaxUpload = new AjaxUpload($modx, $scriptProperties);\\nif (!$ajaxUpload->initialize()) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not initialize AjaxUpload class.\', \'\', \'AjaxUpload2Formit\');\\n    if ($debug) {\\n        return \'Could not load initialize AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\n\\n$success = true;\\nswitch (true) {\\n    case (empty($ajaxuploadFieldname)) :\\n        $hook->addError($scriptProperties[\'uid\'], \'Missing parameter ajaxuploadFieldname.\');\\n        $modx->log(modX::LOG_LEVEL_ERROR, \'Missing parameter ajaxuploadFieldname.\', \'\', \'AjaxUpload2Formit\');\\n        $success = false;\\n        break;\\n    case (empty($ajaxuploadTarget)) :\\n        $hook->addError($scriptProperties[\'uid\'], \'Missing parameter ajaxuploadTarget.\');\\n        $modx->log(modX::LOG_LEVEL_ERROR, \'Missing parameter ajaxuploadTarget.\', \'\', \'AjaxUpload2Formit\');\\n        $success = false;\\n        break;\\n    default :\\n        $errors = $ajaxUpload->saveUploads($ajaxuploadTarget, $scriptProperties[\'clearQueue\']);\\n        if ($errors) {\\n            $hook->addError($scriptProperties[\'uid\'], $errors);\\n            $success = false;\\n            break;\\n        }\\n        $ajaxUpload->deleteExisting();\\n        $ajaxuploadValue = $ajaxUpload->getValue($ajaxuploadFieldformat);\\n        $hook->setValue($ajaxuploadFieldname, $ajaxuploadValue);\\n        $success = true;\\n}\\nreturn $success;","locked":0,"properties":"a:5:{s:13:\\"ajaxuploadUid\\";a:7:{s:4:\\"name\\";s:13:\\"ajaxuploadUid\\";s:4:\\"desc\\";s:42:\\"ajaxupload.ajaxupload2formit.ajaxuploadUid\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:19:\\"ajaxuploadFieldname\\";a:7:{s:4:\\"name\\";s:19:\\"ajaxuploadFieldname\\";s:4:\\"desc\\";s:48:\\"ajaxupload.ajaxupload2formit.ajaxuploadFieldname\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"ajaxuploadTarget\\";a:7:{s:4:\\"name\\";s:16:\\"ajaxuploadTarget\\";s:4:\\"desc\\";s:45:\\"ajaxupload.ajaxupload2formit.ajaxuploadTarget\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"ajaxuploadFieldformat\\";a:7:{s:4:\\"name\\";s:21:\\"ajaxuploadFieldformat\\";s:4:\\"desc\\";s:50:\\"ajaxupload.ajaxupload2formit.ajaxuploadFieldformat\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:32:\\"ajaxupload.formit2ajaxupload.csv\\";s:5:\\"value\\";s:3:\\"csv\\";}i:1;a:2:{s:4:\\"text\\";s:33:\\"ajaxupload.formit2ajaxupload.json\\";s:5:\\"value\\";s:4:\\"json\\";}}s:5:\\"value\\";s:3:\\"csv\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"ajaxuploadClearQueue\\";a:7:{s:4:\\"name\\";s:20:\\"ajaxuploadClearQueue\\";s:4:\\"desc\\";s:49:\\"ajaxupload.ajaxupload2formit.ajaxuploadClearQueue\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * AjaxUpload2Formit\\n *\\n * @package ajaxupload\\n * @subpackage hook\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var fiHooks $hook\\n *\\/\\n$ajaxuploadCorePath = $modx->getOption(\'ajaxupload.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsPath = $modx->getOption(\'ajaxupload.assets_path\', null, $modx->getOption(\'assets_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsUrl = $modx->getOption(\'ajaxupload.assets_url\', null, $modx->getOption(\'assets_url\') . \'components\\/ajaxupload\\/\');\\n\\n$ajaxuploadFieldname = $modx->getOption(\'ajaxuploadFieldname\', $scriptProperties, \'\');\\n$ajaxuploadFieldformat = $modx->getOption(\'ajaxuploadFieldformat\', $scriptProperties, \'csv\');\\n$ajaxuploadTarget = $modx->getOption(\'ajaxuploadTarget\', $scriptProperties, \'\');\\n$scriptProperties[\'debug\'] = (bool)$modx->getOption(\'ajaxuploadDebug\', $scriptProperties, $modx->getOption(\'ajaxupload.debug\', null, false));\\n$scriptProperties[\'uid\'] = $modx->getOption(\'ajaxuploadUid\', $scriptProperties, \'\');\\n$scriptProperties[\'cacheExpires\'] = $modx->getOption(\'ajaxuploadCacheExpires\', $scriptProperties, $modx->getOption(\'ajaxupload.cache_expires\', null, \'4\'));\\n$scriptProperties[\'clearQueue\'] = (bool)$modx->getOption(\'ajaxuploadClearQueue\', $scriptProperties, false, true);\\n$scriptProperties[\'allowOverwrite\'] = (bool)$modx->getOption(\'ajaxuploadAllowOverwrite\', $scriptProperties, true, true);\\n\\n$debug = $scriptProperties[\'debug\'];\\n\\nif (!$modx->loadClass(\'AjaxUpload\', $ajaxuploadCorePath . \'model\\/ajaxupload\\/\', true, true)) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not load AjaxUpload class.\', \'\', \'AjaxUpload2Formit\');\\n    if ($debug) {\\n        return \'Could not load AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\n\\n$scriptProperties[\'core_path\'] = $ajaxuploadCorePath;\\n$scriptProperties[\'assets_path\'] = $ajaxuploadAssetsPath;\\n$scriptProperties[\'assets_url\'] = $ajaxuploadAssetsUrl;\\n$ajaxUpload = new AjaxUpload($modx, $scriptProperties);\\nif (!$ajaxUpload->initialize()) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not initialize AjaxUpload class.\', \'\', \'AjaxUpload2Formit\');\\n    if ($debug) {\\n        return \'Could not load initialize AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\n\\n$success = true;\\nswitch (true) {\\n    case (empty($ajaxuploadFieldname)) :\\n        $hook->addError($scriptProperties[\'uid\'], \'Missing parameter ajaxuploadFieldname.\');\\n        $modx->log(modX::LOG_LEVEL_ERROR, \'Missing parameter ajaxuploadFieldname.\', \'\', \'AjaxUpload2Formit\');\\n        $success = false;\\n        break;\\n    case (empty($ajaxuploadTarget)) :\\n        $hook->addError($scriptProperties[\'uid\'], \'Missing parameter ajaxuploadTarget.\');\\n        $modx->log(modX::LOG_LEVEL_ERROR, \'Missing parameter ajaxuploadTarget.\', \'\', \'AjaxUpload2Formit\');\\n        $success = false;\\n        break;\\n    default :\\n        $errors = $ajaxUpload->saveUploads($ajaxuploadTarget, $scriptProperties[\'clearQueue\']);\\n        if ($errors) {\\n            $hook->addError($scriptProperties[\'uid\'], $errors);\\n            $success = false;\\n            break;\\n        }\\n        $ajaxUpload->deleteExisting();\\n        $ajaxuploadValue = $ajaxUpload->getValue($ajaxuploadFieldformat);\\n        $hook->setValue($ajaxuploadFieldname, $ajaxuploadValue);\\n        $success = true;\\n}\\nreturn $success;"}',
        'guid' => '8e3527623179180dc55cc1c50210d0a7',
        'native_key' => NULL,
        'signature' => '127b79b9c0440a367c77582bf1dbb7ca',
      ),
      'a95ade1be9308ed8b22e2190b43b478b' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"Formit2AjaxUpload","description":"AjaxUpload Formit preHook. Prefill the upload queue from Formit field.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * Formit2AjaxUpload\\n *\\n * @package ajaxupload\\n * @subpackage prehook\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var fiHooks $hook\\n *\\/\\n$ajaxuploadCorePath = $modx->getOption(\'ajaxupload.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsPath = $modx->getOption(\'ajaxupload.assets_path\', null, $modx->getOption(\'assets_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsUrl = $modx->getOption(\'ajaxupload.assets_url\', null, $modx->getOption(\'assets_url\') . \'components\\/ajaxupload\\/\');\\n\\n$ajaxuploadFieldname = $modx->getOption(\'ajaxuploadFieldname\', $scriptProperties, \'\');\\n$ajaxuploadFieldformat = $modx->getOption(\'ajaxuploadFieldformat\', $scriptProperties, \'csv\');\\n$ajaxuploadTarget = $modx->getOption(\'ajaxuploadTarget\', $scriptProperties, \'\');\\n$scriptProperties[\'debug\'] = (bool)$modx->getOption(\'ajaxuploadDebug\', $scriptProperties, $modx->getOption(\'ajaxupload.debug\', null, false));\\n$scriptProperties[\'uid\'] = $modx->getOption(\'ajaxuploadUid\', $scriptProperties, \'\');\\n$scriptProperties[\'cacheExpires\'] = $modx->getOption(\'ajaxuploadCacheExpires\', $scriptProperties, $modx->getOption(\'ajaxupload.cache_expires\', null, \'4\'));\\n\\n$debug = $scriptProperties[\'debug\'];\\n\\nif (!$modx->loadClass(\'AjaxUpload\', $ajaxuploadCorePath . \'model\\/ajaxupload\\/\', true, true)) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not load AjaxUpload class.\', \'\', \'Formit2AjaxUpload\');\\n    if ($debug) {\\n        return \'Could not load AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\n\\n$uidConfig = isset($_SESSION[\'ajaxupload\'][$scriptProperties[\'uid\'] . \'config\']) ? $_SESSION[\'ajaxupload\'][$scriptProperties[\'uid\'] . \'config\'] : array();\\n\\n$scriptProperties[\'core_path\'] = $ajaxuploadCorePath;\\n$scriptProperties[\'assets_path\'] = $ajaxuploadAssetsPath;\\n$scriptProperties[\'assets_url\'] = $ajaxuploadAssetsUrl;\\n$ajaxUpload = new AjaxUpload($modx, $scriptProperties);\\nif (!$ajaxUpload->initialize($uidConfig)) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not initialize AjaxUpload class.\', \'\', \'Formit2AjaxUpload\');\\n    if ($debug) {\\n        return \'Could not load initialize AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\n\\n$success = true;\\nswitch (true) {\\n    case (empty($ajaxuploadFieldname)) :\\n        $hook->addError($scriptProperties[\'uid\'], \'Missing parameter ajaxuploadFieldname.\');\\n        $modx->log(modX::LOG_LEVEL_ERROR, \'Missing parameter ajaxuploadFieldname.\', \'\', \'Formit2AjaxUpload\');\\n        $success = false;\\n        break;\\n    case (empty($ajaxuploadTarget)) :\\n        $hook->addError($scriptProperties[\'uid\'], \'Missing parameter ajaxuploadTarget.\');\\n        $modx->log(modX::LOG_LEVEL_ERROR, \'Missing parameter ajaxuploadTarget.\', \'\', \'Formit2AjaxUpload\');\\n        $success = false;\\n        break;\\n    default :\\n        if (!count($_POST)) {\\n            $ajaxuploadValue = $hook->getValue($ajaxuploadFieldname);\\n            if ($ajaxuploadValue) {\\n                switch ($ajaxuploadFieldformat) {\\n                    case \'json\' :\\n                        $ajaxuploadValue = json_decode($ajaxuploadValue, true);\\n                        break;\\n                    case \'csv\':\\n                    default :\\n                        $ajaxuploadValue = explode(\',\', $ajaxuploadValue);\\n                }\\n                $ajaxUpload->retrieveUploads($ajaxuploadValue);\\n            }\\n        }\\n        $success = true;\\n}\\nreturn $success;","locked":0,"properties":"a:4:{s:13:\\"ajaxuploadUid\\";a:7:{s:4:\\"name\\";s:13:\\"ajaxuploadUid\\";s:4:\\"desc\\";s:42:\\"ajaxupload.formit2ajaxupload.ajaxuploadUid\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:19:\\"ajaxuploadFieldname\\";a:7:{s:4:\\"name\\";s:19:\\"ajaxuploadFieldname\\";s:4:\\"desc\\";s:48:\\"ajaxupload.formit2ajaxupload.ajaxuploadFieldname\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"ajaxuploadTarget\\";a:7:{s:4:\\"name\\";s:16:\\"ajaxuploadTarget\\";s:4:\\"desc\\";s:45:\\"ajaxupload.formit2ajaxupload.ajaxuploadTarget\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:21:\\"ajaxuploadFieldformat\\";a:7:{s:4:\\"name\\";s:21:\\"ajaxuploadFieldformat\\";s:4:\\"desc\\";s:50:\\"ajaxupload.formit2ajaxupload.ajaxuploadFieldformat\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:2:{i:0;a:2:{s:4:\\"text\\";s:32:\\"ajaxupload.ajaxupload2formit.csv\\";s:5:\\"value\\";s:3:\\"csv\\";}i:1;a:2:{s:4:\\"text\\";s:33:\\"ajaxupload.ajaxupload2formit.json\\";s:5:\\"value\\";s:4:\\"json\\";}}s:5:\\"value\\";s:3:\\"csv\\";s:7:\\"lexicon\\";s:21:\\"ajaxupload:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Formit2AjaxUpload\\n *\\n * @package ajaxupload\\n * @subpackage prehook\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var fiHooks $hook\\n *\\/\\n$ajaxuploadCorePath = $modx->getOption(\'ajaxupload.core_path\', null, $modx->getOption(\'core_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsPath = $modx->getOption(\'ajaxupload.assets_path\', null, $modx->getOption(\'assets_path\') . \'components\\/ajaxupload\\/\');\\n$ajaxuploadAssetsUrl = $modx->getOption(\'ajaxupload.assets_url\', null, $modx->getOption(\'assets_url\') . \'components\\/ajaxupload\\/\');\\n\\n$ajaxuploadFieldname = $modx->getOption(\'ajaxuploadFieldname\', $scriptProperties, \'\');\\n$ajaxuploadFieldformat = $modx->getOption(\'ajaxuploadFieldformat\', $scriptProperties, \'csv\');\\n$ajaxuploadTarget = $modx->getOption(\'ajaxuploadTarget\', $scriptProperties, \'\');\\n$scriptProperties[\'debug\'] = (bool)$modx->getOption(\'ajaxuploadDebug\', $scriptProperties, $modx->getOption(\'ajaxupload.debug\', null, false));\\n$scriptProperties[\'uid\'] = $modx->getOption(\'ajaxuploadUid\', $scriptProperties, \'\');\\n$scriptProperties[\'cacheExpires\'] = $modx->getOption(\'ajaxuploadCacheExpires\', $scriptProperties, $modx->getOption(\'ajaxupload.cache_expires\', null, \'4\'));\\n\\n$debug = $scriptProperties[\'debug\'];\\n\\nif (!$modx->loadClass(\'AjaxUpload\', $ajaxuploadCorePath . \'model\\/ajaxupload\\/\', true, true)) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not load AjaxUpload class.\', \'\', \'Formit2AjaxUpload\');\\n    if ($debug) {\\n        return \'Could not load AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\n\\n$uidConfig = isset($_SESSION[\'ajaxupload\'][$scriptProperties[\'uid\'] . \'config\']) ? $_SESSION[\'ajaxupload\'][$scriptProperties[\'uid\'] . \'config\'] : array();\\n\\n$scriptProperties[\'core_path\'] = $ajaxuploadCorePath;\\n$scriptProperties[\'assets_path\'] = $ajaxuploadAssetsPath;\\n$scriptProperties[\'assets_url\'] = $ajaxuploadAssetsUrl;\\n$ajaxUpload = new AjaxUpload($modx, $scriptProperties);\\nif (!$ajaxUpload->initialize($uidConfig)) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'Could not initialize AjaxUpload class.\', \'\', \'Formit2AjaxUpload\');\\n    if ($debug) {\\n        return \'Could not load initialize AjaxUpload class.\';\\n    } else {\\n        return \'\';\\n    }\\n}\\n\\n$success = true;\\nswitch (true) {\\n    case (empty($ajaxuploadFieldname)) :\\n        $hook->addError($scriptProperties[\'uid\'], \'Missing parameter ajaxuploadFieldname.\');\\n        $modx->log(modX::LOG_LEVEL_ERROR, \'Missing parameter ajaxuploadFieldname.\', \'\', \'Formit2AjaxUpload\');\\n        $success = false;\\n        break;\\n    case (empty($ajaxuploadTarget)) :\\n        $hook->addError($scriptProperties[\'uid\'], \'Missing parameter ajaxuploadTarget.\');\\n        $modx->log(modX::LOG_LEVEL_ERROR, \'Missing parameter ajaxuploadTarget.\', \'\', \'Formit2AjaxUpload\');\\n        $success = false;\\n        break;\\n    default :\\n        if (!count($_POST)) {\\n            $ajaxuploadValue = $hook->getValue($ajaxuploadFieldname);\\n            if ($ajaxuploadValue) {\\n                switch ($ajaxuploadFieldformat) {\\n                    case \'json\' :\\n                        $ajaxuploadValue = json_decode($ajaxuploadValue, true);\\n                        break;\\n                    case \'csv\':\\n                    default :\\n                        $ajaxuploadValue = explode(\',\', $ajaxuploadValue);\\n                }\\n                $ajaxUpload->retrieveUploads($ajaxuploadValue);\\n            }\\n        }\\n        $success = true;\\n}\\nreturn $success;"}',
        'guid' => '774494a0399883bfbffa0bac2deaaeae',
        'native_key' => NULL,
        'signature' => 'c5c7cc826326cfea22eaedda8bce23a5',
      ),
      'f16d5ca70750a509a56a4fe21702726c' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":null,"source":0,"property_preprocess":0,"name":"AjaxUploadAttachments","description":"AjaxUpload Formit hook. Attach the uploaded files to the mail.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * AjaxUploadAttachments\\n *\\n * @package ajaxupload\\n * @subpackage hook\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var fiHooks $hook\\n *\\/\\n$ajaxuploadFieldname = $modx->getOption(\'ajaxuploadFieldname\', $scriptProperties, \'\');\\n$ajaxuploadFieldformat = $modx->getOption(\'ajaxuploadFieldformat\', $scriptProperties, \'csv\');\\n$debug = (bool)$modx->getOption(\'ajaxuploadDebug\', $scriptProperties, $modx->getOption(\'ajaxupload.debug\', null, false));\\n\\n$assetsPath = $modx->getOption(\'assets_path\');\\n$assetsUrl = $modx->getOption(\'assets_url\');\\n$assetsUrlLength = strlen($assetsUrl);\\n\\nif ($ajaxuploadFieldname) {\\n    $attachments = $hook->getValue($ajaxuploadFieldname);\\n    if ($ajaxuploadFieldformat == \'json\') {\\n        $attachments = json_decode($attachments, true);\\n    } else {\\n        $attachments = (!empty($attachments)) ? explode(\',\', $attachments) : array();\\n    }\\n\\n    $hook->modx->getService(\'mail\', \'mail.modPHPMailer\');\\n\\n    foreach ($attachments as $attachment) {\\n        $attachment = substr($attachment, $assetsUrlLength);\\n        if (file_exists($assetsPath . $attachment) && is_file($assetsPath . $attachment)) {\\n            $hook->modx->mail->mailer->AddAttachment($assetsPath . $attachment);\\n        } elseif ($debug) {\\n            if (!is_file($assetsPath . $attachment)) {\\n                $modx->log(xPDO::LOG_LEVEL_ERROR, \'The attached file \' . $assetsPath . $attachment . \' is not a file!\', \'\', \'AjaxUploadAttachments\');\\n            } elseif (!file_exists($assetsPath . $attachment)) {\\n                $modx->log(xPDO::LOG_LEVEL_ERROR, \'The attached file \' . $assetsPath . $attachment . \' does not exist!\', \'\', \'AjaxUploadAttachments\');\\n            }\\n        }\\n    }\\n}\\nreturn true;","locked":0,"properties":"a:0:{}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * AjaxUploadAttachments\\n *\\n * @package ajaxupload\\n * @subpackage hook\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var fiHooks $hook\\n *\\/\\n$ajaxuploadFieldname = $modx->getOption(\'ajaxuploadFieldname\', $scriptProperties, \'\');\\n$ajaxuploadFieldformat = $modx->getOption(\'ajaxuploadFieldformat\', $scriptProperties, \'csv\');\\n$debug = (bool)$modx->getOption(\'ajaxuploadDebug\', $scriptProperties, $modx->getOption(\'ajaxupload.debug\', null, false));\\n\\n$assetsPath = $modx->getOption(\'assets_path\');\\n$assetsUrl = $modx->getOption(\'assets_url\');\\n$assetsUrlLength = strlen($assetsUrl);\\n\\nif ($ajaxuploadFieldname) {\\n    $attachments = $hook->getValue($ajaxuploadFieldname);\\n    if ($ajaxuploadFieldformat == \'json\') {\\n        $attachments = json_decode($attachments, true);\\n    } else {\\n        $attachments = (!empty($attachments)) ? explode(\',\', $attachments) : array();\\n    }\\n\\n    $hook->modx->getService(\'mail\', \'mail.modPHPMailer\');\\n\\n    foreach ($attachments as $attachment) {\\n        $attachment = substr($attachment, $assetsUrlLength);\\n        if (file_exists($assetsPath . $attachment) && is_file($assetsPath . $attachment)) {\\n            $hook->modx->mail->mailer->AddAttachment($assetsPath . $attachment);\\n        } elseif ($debug) {\\n            if (!is_file($assetsPath . $attachment)) {\\n                $modx->log(xPDO::LOG_LEVEL_ERROR, \'The attached file \' . $assetsPath . $attachment . \' is not a file!\', \'\', \'AjaxUploadAttachments\');\\n            } elseif (!file_exists($assetsPath . $attachment)) {\\n                $modx->log(xPDO::LOG_LEVEL_ERROR, \'The attached file \' . $assetsPath . $attachment . \' does not exist!\', \'\', \'AjaxUploadAttachments\');\\n            }\\n        }\\n    }\\n}\\nreturn true;"}',
        'guid' => 'f1402e5042853d45bc28b752248a3154',
        'native_key' => NULL,
        'signature' => '0ca60a4b3401ceecac9edf06a96e0b5c',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Children' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 
      array (
        0 => 'parent',
        1 => 'category',
      ),
    ),
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Templates' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'templatename',
    ),
    'TemplateVars' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Plugins' => 
    array (
      'unique_key' => 'name',
      'preserve_keys' => false,
      'update_object' => true,
      'related_objects' => true,
      'related_object_attributes' => 
      array (
        'PluginEvents' => 
        array (
          'preserve_keys' => true,
          'update_object' => false,
          'unique_key' => 
          array (
            0 => 'pluginid',
            1 => 'event',
          ),
        ),
      ),
    ),
  ),
  'namespace' => 'ajaxupload',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"ajaxupload-1.5.8-pl\\/modCategory\\/254097b693e569d3a99016d330262e4f\\/0\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"ajaxupload"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"ajaxupload-1.5.8-pl\\/modCategory\\/254097b693e569d3a99016d330262e4f\\/1\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"ajaxupload"}',
    ),
    2 => 
    array (
      'type' => 'php',
      'body' => '{"source":"ajaxupload-1.5.8-pl\\/modCategory\\/254097b693e569d3a99016d330262e4f.resolve.treehillstudio.resolver","type":"php","name":"resolve.treehillstudio"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '1f6a66a322a4f11b871abc1fc27176ba',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '254097b693e569d3a99016d330262e4f',
  'native_key' => NULL,
  'object' => '{"id":null,"parent":0,"category":"AjaxUpload","rank":0}',
);