<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Chunks' => 
    array (
      '0949f6352b5c8e6afb8a81be26692b63' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"ExtUserSchema","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<model package=\\"extendeduser\\" baseClass=\\"xPDOObject\\" platform=\\"mysql\\" defaultEngine=\\"MyISAM\\" tablePrefix=\\"ext_\\" version=\\"1.0.0\\">\\n    <!-- extend the modUser class -->\\n    <object class=\\"extUser\\" extends=\\"modUser\\">\\n        <composite alias=\\"Data\\" local=\\"id\\" class=\\"userData\\" foreign=\\"userdata_id\\" cardinality=\\"one\\" owner=\\"local\\"\\/>\\n    <\\/object>\\n    <object class=\\"userData\\" table=\\"user_data\\" extends=\\"xPDOSimpleObject\\">\\n        <field key=\\"userdata_id\\" dbtype=\\"int\\" precision=\\"11\\" phptype=\\"integer\\" null=\\"false\\" attributes=\\"unsigned\\"\\/>\\n        <field key=\\"firstName\\" dbtype=\\"varchar\\" precision=\\"50\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"lastName\\" dbtype=\\"varchar\\" precision=\\"50\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"title\\" dbtype=\\"varchar\\" precision=\\"100\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"company\\" dbtype=\\"varchar\\" precision=\\"100\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"registrationDate\\" dbtype=\\"datetime\\" phptype=\\"datetime\\"\\/>\\n\\n        <index alias=\\"userdata_id\\" name=\\"userdata_id\\" primary=\\"false\\" unique=\\"true\\" type=\\"BTREE\\">\\n            <column key=\\"userdata_id\\" length=\\"\\" collation=\\"A\\" null=\\"false\\"\\/>\\n        <\\/index>\\n        <aggregate alias=\\"User\\" class= \\"modUser\\" local=\\"userdata_id\\" foreign=\\"id\\" cardinality=\\"one\\" owner=\\"foreign\\"\\/>\\n        <aggregate alias=\\"Profile\\" class=\\"modUserProfile\\" local=\\"userdata_id\\" foreign=\\"internalKey\\" cardinality=\\"one\\" owner=\\"foreign\\"\\/>\\n    <\\/object>\\n<\\/model>","locked":0,"properties":null,"static":0,"static_file":"","content":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<model package=\\"extendeduser\\" baseClass=\\"xPDOObject\\" platform=\\"mysql\\" defaultEngine=\\"MyISAM\\" tablePrefix=\\"ext_\\" version=\\"1.0.0\\">\\n    <!-- extend the modUser class -->\\n    <object class=\\"extUser\\" extends=\\"modUser\\">\\n        <composite alias=\\"Data\\" local=\\"id\\" class=\\"userData\\" foreign=\\"userdata_id\\" cardinality=\\"one\\" owner=\\"local\\"\\/>\\n    <\\/object>\\n    <object class=\\"userData\\" table=\\"user_data\\" extends=\\"xPDOSimpleObject\\">\\n        <field key=\\"userdata_id\\" dbtype=\\"int\\" precision=\\"11\\" phptype=\\"integer\\" null=\\"false\\" attributes=\\"unsigned\\"\\/>\\n        <field key=\\"firstName\\" dbtype=\\"varchar\\" precision=\\"50\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"lastName\\" dbtype=\\"varchar\\" precision=\\"50\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"title\\" dbtype=\\"varchar\\" precision=\\"100\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"company\\" dbtype=\\"varchar\\" precision=\\"100\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"registrationDate\\" dbtype=\\"datetime\\" phptype=\\"datetime\\"\\/>\\n\\n        <index alias=\\"userdata_id\\" name=\\"userdata_id\\" primary=\\"false\\" unique=\\"true\\" type=\\"BTREE\\">\\n            <column key=\\"userdata_id\\" length=\\"\\" collation=\\"A\\" null=\\"false\\"\\/>\\n        <\\/index>\\n        <aggregate alias=\\"User\\" class= \\"modUser\\" local=\\"userdata_id\\" foreign=\\"id\\" cardinality=\\"one\\" owner=\\"foreign\\"\\/>\\n        <aggregate alias=\\"Profile\\" class=\\"modUserProfile\\" local=\\"userdata_id\\" foreign=\\"internalKey\\" cardinality=\\"one\\" owner=\\"foreign\\"\\/>\\n    <\\/object>\\n<\\/model>"}',
        'guid' => '2fb7a1ee6943bbdb830d52b55b83196d',
        'native_key' => 1,
        'signature' => '26336b3df93aedcb7c0c99040e33a533',
      ),
      '856624d5dce51523ad8ab21af8cc9a52' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":2,"source":0,"property_preprocess":0,"name":"ExtResourceSchema","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<model package=\\"extendedresource\\" baseClass=\\"xPDOObject\\" platform=\\"mysql\\" defaultEngine=\\"MyISAM\\" tablePrefix=\\"ext_\\" version=\\"1.0.0\\">\\n    <!-- extend the modResource class -->\\n    <object class=\\"extResource\\" extends=\\"modResource\\">\\n        <composite alias=\\"Data\\" local=\\"id\\" class=\\"resourceData\\" foreign=\\"resourcedata_id\\" cardinality=\\"one\\" owner=\\"local\\"\\/>\\n    <\\/object>\\n    <object class=\\"resourceData\\" table=\\"resource_data\\" extends=\\"xPDOSimpleObject\\">\\n        <field key=\\"resourcedata_id\\" dbtype=\\"int\\" precision=\\"11\\" phptype=\\"integer\\" null=\\"false\\" attributes=\\"unsigned\\"\\/>\\n        <field key=\\"name\\" dbtype=\\"varchar\\" precision=\\"50\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"color\\" dbtype=\\"varchar\\" precision=\\"50\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"breed\\" dbtype=\\"varchar\\" precision=\\"50\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"age\\" dbtype=\\"int\\" precision=\\"10\\" phptype=\\"integer\\" null=\\"false\\" default=\\"0\\"\\/>\\n\\n        <index alias=\\"resourcedata_id\\" name=\\"resourcedata_id\\" primary=\\"false\\" unique=\\"true\\" type=\\"BTREE\\">\\n            <column key=\\"resourcedata_id\\" length=\\"\\" collation=\\"A\\" null=\\"false\\"\\/>\\n        <\\/index>\\n        <aggregate alias=\\"Resource\\" class=\\"modResource\\" local=\\"resourcedata_id\\" foreign=\\"id\\" cardinality=\\"one\\" owner=\\"foreign\\"\\/>\\n    <\\/object>\\n<\\/model>","locked":0,"properties":null,"static":0,"static_file":"","content":"<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>\\n<model package=\\"extendedresource\\" baseClass=\\"xPDOObject\\" platform=\\"mysql\\" defaultEngine=\\"MyISAM\\" tablePrefix=\\"ext_\\" version=\\"1.0.0\\">\\n    <!-- extend the modResource class -->\\n    <object class=\\"extResource\\" extends=\\"modResource\\">\\n        <composite alias=\\"Data\\" local=\\"id\\" class=\\"resourceData\\" foreign=\\"resourcedata_id\\" cardinality=\\"one\\" owner=\\"local\\"\\/>\\n    <\\/object>\\n    <object class=\\"resourceData\\" table=\\"resource_data\\" extends=\\"xPDOSimpleObject\\">\\n        <field key=\\"resourcedata_id\\" dbtype=\\"int\\" precision=\\"11\\" phptype=\\"integer\\" null=\\"false\\" attributes=\\"unsigned\\"\\/>\\n        <field key=\\"name\\" dbtype=\\"varchar\\" precision=\\"50\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"color\\" dbtype=\\"varchar\\" precision=\\"50\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"breed\\" dbtype=\\"varchar\\" precision=\\"50\\" phptype=\\"string\\" null=\\"true\\"\\/>\\n        <field key=\\"age\\" dbtype=\\"int\\" precision=\\"10\\" phptype=\\"integer\\" null=\\"false\\" default=\\"0\\"\\/>\\n\\n        <index alias=\\"resourcedata_id\\" name=\\"resourcedata_id\\" primary=\\"false\\" unique=\\"true\\" type=\\"BTREE\\">\\n            <column key=\\"resourcedata_id\\" length=\\"\\" collation=\\"A\\" null=\\"false\\"\\/>\\n        <\\/index>\\n        <aggregate alias=\\"Resource\\" class=\\"modResource\\" local=\\"resourcedata_id\\" foreign=\\"id\\" cardinality=\\"one\\" owner=\\"foreign\\"\\/>\\n    <\\/object>\\n<\\/model>"}',
        'guid' => '1772bc7999fe8e282a64d4705641802b',
        'native_key' => 2,
        'signature' => 'dada53f215cf3aabc833731a1422b0fe',
      ),
      'eb4a13df657af73b4af3bc83ba8c6564' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":3,"source":0,"property_preprocess":0,"name":"ClassExtenderForm","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"<!-- lexicon->load(\'classextender:form\'); -->\\n\\n<div id=\\"class_extender\\">\\n<form id=\\"class_extender_form\\" action=\\"[[~[[*id]]]]\\" method=\\"post\\">\\n\\n<h3>[[*pagetitle]]<\\/h3>\\n\\n   <div id=\\"ce_results\\">\\n       [[+ce_results]]\\n   <\\/div>\\n\\n    <input type=\\"hidden\\" name=\\"submitVar\\" id=\\"submitVar\\" value=\\"submitVar\\"\\/>\\n\\n    <label for=\\"ce_package_name\\">[[%ce_package_name_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"ce_package_name\\" \\n                name=\\"ce_package_name\\" value=\\"[[+ce_package_name]]\\"\\/>\\n    <\\/label>\\n\\n    <br \\/><label for=\\"ce_class\\">[[%ce_class_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"ce_class\\"\\n                name=\\"ce_class\\" value=\\"[[+ce_class]]\\"\\/>\\n    <\\/label>\\n\\n    <br \\/><label for=\\"ce_parent_object\\">[[%ce_parent_object_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"ce_parent_object\\"\\n                name=\\"ce_parent_object\\" value=\\"[[+ce_parent_object]]\\"\\/>\\n    <\\/label>\\n\\n    <br\\/><label for=\\"ce_table_prefix\\">[[%ce_table_prefix_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"ce_table_prefix\\"\\n                name=\\"ce_table_prefix\\" value=\\"[[+ce_table_prefix]]\\"\\/>\\n    <\\/label>\\n\\n    <br\\/><label for=\\"ce_table_name\\">[[%ce_table_name_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"ce_table_name\\"\\n                name=\\"ce_table_name\\" value=\\"[[+ce_table_name]]\\"\\/>\\n    <\\/label>\\n    <br\\/><label for=\\"ce_schema_tpl_name\\">[[%ce_schema_tpl_name_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n    <input type=\\"text\\" size=\\"50\\" id=\\"ce_schema_tpl_name\\"\\n            name=\\"ce_schema_tpl_name\\" value=\\"[[+ce_schema_tpl_name]]\\"\\/>\\n<\\/label>\\n    <br\\/>\\n    <br \\/>\\n\\n\\n\\n    <br \\/>\\n\\n    <input id=\\"ce_button\\" name=\\"ce_submit\\" type=\\"submit\\" value=\\"Submit\\"\\/>\\n\\n<\\/form>\\n<\\/div>","locked":0,"properties":null,"static":0,"static_file":"","content":"<!-- lexicon->load(\'classextender:form\'); -->\\n\\n<div id=\\"class_extender\\">\\n<form id=\\"class_extender_form\\" action=\\"[[~[[*id]]]]\\" method=\\"post\\">\\n\\n<h3>[[*pagetitle]]<\\/h3>\\n\\n   <div id=\\"ce_results\\">\\n       [[+ce_results]]\\n   <\\/div>\\n\\n    <input type=\\"hidden\\" name=\\"submitVar\\" id=\\"submitVar\\" value=\\"submitVar\\"\\/>\\n\\n    <label for=\\"ce_package_name\\">[[%ce_package_name_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"ce_package_name\\" \\n                name=\\"ce_package_name\\" value=\\"[[+ce_package_name]]\\"\\/>\\n    <\\/label>\\n\\n    <br \\/><label for=\\"ce_class\\">[[%ce_class_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"ce_class\\"\\n                name=\\"ce_class\\" value=\\"[[+ce_class]]\\"\\/>\\n    <\\/label>\\n\\n    <br \\/><label for=\\"ce_parent_object\\">[[%ce_parent_object_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"ce_parent_object\\"\\n                name=\\"ce_parent_object\\" value=\\"[[+ce_parent_object]]\\"\\/>\\n    <\\/label>\\n\\n    <br\\/><label for=\\"ce_table_prefix\\">[[%ce_table_prefix_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"ce_table_prefix\\"\\n                name=\\"ce_table_prefix\\" value=\\"[[+ce_table_prefix]]\\"\\/>\\n    <\\/label>\\n\\n    <br\\/><label for=\\"ce_table_name\\">[[%ce_table_name_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"ce_table_name\\"\\n                name=\\"ce_table_name\\" value=\\"[[+ce_table_name]]\\"\\/>\\n    <\\/label>\\n    <br\\/><label for=\\"ce_schema_tpl_name\\">[[%ce_schema_tpl_name_caption? &namespace=`classextender` &topic=`form`]]<br\\/>\\n    <input type=\\"text\\" size=\\"50\\" id=\\"ce_schema_tpl_name\\"\\n            name=\\"ce_schema_tpl_name\\" value=\\"[[+ce_schema_tpl_name]]\\"\\/>\\n<\\/label>\\n    <br\\/>\\n    <br \\/>\\n\\n\\n\\n    <br \\/>\\n\\n    <input id=\\"ce_button\\" name=\\"ce_submit\\" type=\\"submit\\" value=\\"Submit\\"\\/>\\n\\n<\\/form>\\n<\\/div>"}',
        'guid' => '06b3b64eb4bf5a8f7cdfffbafa85ce69',
        'native_key' => 3,
        'signature' => '0dd4410a8203f72626d6980aa7890438',
      ),
      '08938847940226b4855fc6676c316b25' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":4,"source":0,"property_preprocess":0,"name":"ExtraUserFields","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">First Name<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"firstName\\" value=\\"[[+firstName]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-user\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Last Name<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"lastName\\" value=\\"[[+lastName]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-user\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Title<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"title\\" value=\\"[[+title]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-user\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Company<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"company\\" value=\\"[[+company]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-user\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n\\n\\n\\n","locked":0,"properties":null,"static":0,"static_file":"","content":"<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">First Name<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"firstName\\" value=\\"[[+firstName]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-user\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Last Name<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"lastName\\" value=\\"[[+lastName]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-user\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Title<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"title\\" value=\\"[[+title]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-user\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Company<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"company\\" value=\\"[[+company]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-user\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n\\n\\n\\n"}',
        'guid' => 'e6b4888366fa9fb4a7470258b9562732',
        'native_key' => 4,
        'signature' => 'f234344ca0cb4a6c8d98a0aa09771f8f',
      ),
      '143b5451195d75221bb686b1568e02b4' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":5,"source":0,"property_preprocess":0,"name":"ExtraResourceFields","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Name<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"name\\" value=\\"[[+name]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-resource\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Color<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"color\\" value=\\"[[+color]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-resource\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Breed<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"breed\\" value=\\"[[+breed]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-resource\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Age<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"age\\" value=\\"[[+age]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-resource\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n","locked":0,"properties":null,"static":0,"static_file":"","content":"<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Name<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"name\\" value=\\"[[+name]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-resource\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Color<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"color\\" value=\\"[[+color]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-resource\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Breed<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"breed\\" value=\\"[[+breed]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-resource\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n<div class=\\"x-form-item x-tab-item\\">\\n    <label class=\\"x-form-item-label\\" style=\\"width:auto; font-weight:bold; float:none; font-size:12px\\">Age<\\/label>\\n\\n    <div class=\\"x-form-item x-tab-item\\">\\n        <input type=\\"text\\" name=\\"age\\" value=\\"[[+age]]\\" class=\\"x-form-text x-form-field\\"\\n                onClick=\\"Ext.getCmp(\'modx-panel-resource\').markDirty();\\"\\/>\\n    <\\/div>\\n<\\/div>\\n\\n"}',
        'guid' => 'cf3398ac13a512206cc666cff919df5f',
        'native_key' => 5,
        'signature' => '5447685a36c318ddc606b24c81e32713',
      ),
      '9db57ce3f7ba0c224b2fe5f5a34d1e46' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":6,"source":0,"property_preprocess":0,"name":"ExtUserOuterTpl","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"<h3>Users<\\/h3>\\n\\n<div class = \\"ext-users\\">\\n    <ul class=\\"ext-user-outer\\">\\n        [[+extUserInner]]\\n    <\\/ul>\\n<\\/div>","locked":0,"properties":null,"static":0,"static_file":"","content":"<h3>Users<\\/h3>\\n\\n<div class = \\"ext-users\\">\\n    <ul class=\\"ext-user-outer\\">\\n        [[+extUserInner]]\\n    <\\/ul>\\n<\\/div>"}',
        'guid' => '2e1f5a0340367e5da46f85467fc4e453',
        'native_key' => 6,
        'signature' => '422b82f4e66a2c8c2774d2bb38c3a38c',
      ),
      'da06b35665e862824ba62c58ab14af54' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":7,"source":0,"property_preprocess":0,"name":"ExtUserInnerTpl","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"\\n\\n<li class=\\"ext-user-inner\\">\\n    <span class=\\"ext-user-name\\">[[+lastName]], [[+firstName]]<\\/span>\\n    [[+extUserRow]]\\n<\\/li>","locked":0,"properties":null,"static":0,"static_file":"","content":"\\n\\n<li class=\\"ext-user-inner\\">\\n    <span class=\\"ext-user-name\\">[[+lastName]], [[+firstName]]<\\/span>\\n    [[+extUserRow]]\\n<\\/li>"}',
        'guid' => 'af20c66980396da9038b4c663ca6e278',
        'native_key' => 7,
        'signature' => 'de84c033bdd31eaee04c4188e8a572bb',
      ),
      'a19fc2fcc1cd694c8948d16c1efdc69f' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":8,"source":0,"property_preprocess":0,"name":"ExtUserRowTpl","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"\\n<ul class=\\"ext-user-row\\">\\n\\n    <li class=\\"ext-user-field\\">\\n        Username: [[+username]]\\n    <\\/li>\\n    <li class=\\"ext-user-field\\">\\n        email: [[+email]]\\n    <\\/li>\\n    <li class=\\"ext-user-field\\">\\n        First Name: [[+firstName]]\\n    <\\/li>\\n    <li class=\\"ext-user-field\\">\\n        Last Name: [[+LastName]]\\n    <\\/li>\\n    <li class=\\"ext-user-field\\">\\n        Title: [[+title]]\\n    <\\/li>\\n    <li class=\\"ext-user-field\\">\\n        Company: [[+company]]\\n    <\\/li>\\n\\n    <li class=\\"ext-user-field\\">\\n        Active: [[+active]]\\n    <\\/li>\\n\\n<\\/ul>","locked":0,"properties":null,"static":0,"static_file":"","content":"\\n<ul class=\\"ext-user-row\\">\\n\\n    <li class=\\"ext-user-field\\">\\n        Username: [[+username]]\\n    <\\/li>\\n    <li class=\\"ext-user-field\\">\\n        email: [[+email]]\\n    <\\/li>\\n    <li class=\\"ext-user-field\\">\\n        First Name: [[+firstName]]\\n    <\\/li>\\n    <li class=\\"ext-user-field\\">\\n        Last Name: [[+LastName]]\\n    <\\/li>\\n    <li class=\\"ext-user-field\\">\\n        Title: [[+title]]\\n    <\\/li>\\n    <li class=\\"ext-user-field\\">\\n        Company: [[+company]]\\n    <\\/li>\\n\\n    <li class=\\"ext-user-field\\">\\n        Active: [[+active]]\\n    <\\/li>\\n\\n<\\/ul>"}',
        'guid' => '81d79b166ef5ba66988808fddc5d71e6',
        'native_key' => 8,
        'signature' => 'e55e2c6355391d5344bb1b0a2d9ddc0f',
      ),
      '4f085dbfcecbeafb454c1f1e89b21f0c' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":9,"source":0,"property_preprocess":0,"name":"ExtResourceOuterTpl","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"<h3>Resources<\\/h3>\\n\\n<div class=\\"ext-resources\\">\\n    <ul class=\\"ext-resource-outer\\">\\n        [[+extResourceInner]]\\n    <\\/ul>\\n<\\/div>","locked":0,"properties":null,"static":0,"static_file":"","content":"<h3>Resources<\\/h3>\\n\\n<div class=\\"ext-resources\\">\\n    <ul class=\\"ext-resource-outer\\">\\n        [[+extResourceInner]]\\n    <\\/ul>\\n<\\/div>"}',
        'guid' => '3096bd9e28f255939f1c25bc8a2e05fa',
        'native_key' => 9,
        'signature' => '93f9edf3e3da42e2f7c5833e61fd88e6',
      ),
      '32d92ff3e96d918529d98a463b7e444d' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":10,"source":0,"property_preprocess":0,"name":"ExtResourceInnerTpl","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"<li class=\\"ext-resource-inner\\">\\n    <span class=\\"ext-resource-name\\">[[+pagetitle]]<\\/span>\\n    [[+extResourceRow]]\\n<\\/li>","locked":0,"properties":null,"static":0,"static_file":"","content":"<li class=\\"ext-resource-inner\\">\\n    <span class=\\"ext-resource-name\\">[[+pagetitle]]<\\/span>\\n    [[+extResourceRow]]\\n<\\/li>"}',
        'guid' => 'c91b1422325d6c76c64186608a8f2b4f',
        'native_key' => 10,
        'signature' => 'fb13675779c2770a16fbb586b39b213a',
      ),
      'c26bdd078e52306b9741349b1e346369' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":11,"source":0,"property_preprocess":0,"name":"ExtResourceRowTpl","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"<ul class=\\"ext-resource-row\\">\\n\\n    <li class=\\"ext-resource-field\\">\\n        Name: [[+name]]\\n    <\\/li>\\n    <li class=\\"ext-resource-field\\">\\n        Color: [[+color]]\\n    <\\/li>\\n    <li class=\\"ext-resource-field\\">\\n        Breed: [[+breed]]\\n    <\\/li>\\n    <li class=\\"ext-resource-field\\">\\n        Age: [[+age]]\\n    <\\/li>\\n\\n<\\/ul>","locked":0,"properties":null,"static":0,"static_file":"","content":"<ul class=\\"ext-resource-row\\">\\n\\n    <li class=\\"ext-resource-field\\">\\n        Name: [[+name]]\\n    <\\/li>\\n    <li class=\\"ext-resource-field\\">\\n        Color: [[+color]]\\n    <\\/li>\\n    <li class=\\"ext-resource-field\\">\\n        Breed: [[+breed]]\\n    <\\/li>\\n    <li class=\\"ext-resource-field\\">\\n        Age: [[+age]]\\n    <\\/li>\\n\\n<\\/ul>"}',
        'guid' => 'a5e133caa32dd7af324ea9449d8aee1f',
        'native_key' => 11,
        'signature' => '63bd9390164a74d6ad08064a90ce3b33',
      ),
      '5db68e26d342caf8d0d9c5c83bf71a23' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modChunk',
        'object' => '{"id":12,"source":0,"property_preprocess":0,"name":"ExtUserSearchFormTpl","description":"Chunk","editor_type":0,"category":0,"cache_type":0,"snippet":"<h3>User Search<\\/h3>\\n\\n<p>Enter a user first and\\/or last name to search for, then click on Submit<\\/p>\\n\\n<form class=\\"ext-user-search-form\\" id=\\"ext-user-search-form\\" method=\\"post\\">\\n    <input type=\\"hidden\\" name=\\"submit-var\\" value=\\"etaoinshrdlu\\"\\/>\\n\\n    <label for=\\"user_search_first_name\\">[[%user_search_first_name_caption? &namespace=`classextender` &topic=`default`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"user_search_first_name\\"\\n                name=\\"user_search_first_name\\" value=\\"[[+user_search_first_name]]\\"\\/><br\\/>\\n    <\\/label>\\n\\n    <label for=\\"user_search_last_name\\">[[%user_search_last_name_caption? &namespace=`classextender` &topic=`default`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"user_search_last_name\\"\\n                name=\\"user_search_last_name\\" value=\\"[[+user_search_last_name]]\\"\\/><br\\/>\\n    <\\/label>\\n    <br\\/>\\n    <input type=\\"submit\\" value=\\"Submit\\">\\n\\n<\\/form>\\n\\n<h3>[[+user_search.results_heading]]<\\/h3>\\n\\n[[+user_search.results]]\\n\\n","locked":0,"properties":null,"static":0,"static_file":"","content":"<h3>User Search<\\/h3>\\n\\n<p>Enter a user first and\\/or last name to search for, then click on Submit<\\/p>\\n\\n<form class=\\"ext-user-search-form\\" id=\\"ext-user-search-form\\" method=\\"post\\">\\n    <input type=\\"hidden\\" name=\\"submit-var\\" value=\\"etaoinshrdlu\\"\\/>\\n\\n    <label for=\\"user_search_first_name\\">[[%user_search_first_name_caption? &namespace=`classextender` &topic=`default`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"user_search_first_name\\"\\n                name=\\"user_search_first_name\\" value=\\"[[+user_search_first_name]]\\"\\/><br\\/>\\n    <\\/label>\\n\\n    <label for=\\"user_search_last_name\\">[[%user_search_last_name_caption? &namespace=`classextender` &topic=`default`]]<br\\/>\\n        <input type=\\"text\\" size=\\"50\\" id=\\"user_search_last_name\\"\\n                name=\\"user_search_last_name\\" value=\\"[[+user_search_last_name]]\\"\\/><br\\/>\\n    <\\/label>\\n    <br\\/>\\n    <input type=\\"submit\\" value=\\"Submit\\">\\n\\n<\\/form>\\n\\n<h3>[[+user_search.results_heading]]<\\/h3>\\n\\n[[+user_search.results]]\\n\\n"}',
        'guid' => '24d02565e4c1c8b27844e52f338ea4a1',
        'native_key' => 12,
        'signature' => 'f307363d90c438f85576a9274d6627a4',
      ),
    ),
    'Snippets' => 
    array (
      'cf0071e4785d24957ae70a6c5636e713' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"GetExtUsers","description":"Show user information","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * GetExtUsers snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 01-05-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Show user information\\n *\\n * Variables\\n * ---------\\n *\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n\\/* The extendeduser package should be pre-loaded\\n   due to being registered in the extension_packages\\n   System Setting *\\/\\n\\n$modx->lexicon->load(\'classextender:default\');\\n\\n\\n\\/* @var $scriptProperties array *\\/\\n$scriptProperties = isset($scriptProperties)\\n    ? $scriptProperties\\n    : array();\\n$sp = $scriptProperties;\\n\\n$userClass = $modx->getOption(\'userDataClass\', $sp, \'userData\');\\n\\n$where = $modx->getOption(\'where\', $sp, array());\\n$where = !empty($where)\\n    ? $modx->fromJSON($where)\\n    : array();\\n\\n$outerTpl = $modx->getOption(\'extUserOuterTpl\', $sp, \'extUserOuterTpl\');\\n$innerTpl = $modx->getOption(\'extUserInnerTpl\', $sp, \'extUserInnerTpl\');\\n$rowTpl = $modx->getOption(\'extUserRowTpl\', $sp, \'extUserRowTpl\');\\n$sortBy = $modx->getOption(\'sortby\', $sp, \'username\');\\n$sortDir = $modx->getOption(\'sortdir\', $sp, \'ASC\');\\n$limit = $modx->getOption(\'limit\', $sp, \'null\', true);\\n$offset = $modx->getOption(\'offset\', $sp, \'null\', true);\\n\\n$offset = ($offset === null) ? 0 : (int) $offset;\\n\\n$c = $modx->newQuery($userClass);\\n$c->sortby($sortBy, $sortDir);\\n$c->where($where);\\nif ($limit !== null) {\\n    $c->limit($limit, $offset);\\n}\\n\\n$users = $modx->getCollectionGraph($userClass, \'{\\"Profile\\":{},\\"User\\":{}}\', $c);\\n\\n$count = count($users);\\n\\nif (!$count) {\\n    return $modx->lexicon(\'ce.no_users_found\');\\n\\n}\\n\\n\\/* @var $user modUser *\\/\\n$i = 0;\\n$outer = $modx->getChunk($outerTpl);\\n\\n$output = \'\';\\n$innerOutput = \'\';\\nforeach ($users as $user) {\\n    $fields = $user->toArray();\\n    unset($fields[\'password\'], $fields[\'cachepwd\'], $fields[\'salt\'], $fields[\'hash_class\']);\\n    if ($user->Profile) {\\n        $fields = array_merge($user->Profile->toArray(), $fields);\\n    }\\n    if ($user->User) {\\n        $fields = array_merge($user->User->toArray(), $fields);\\n    }\\n    $inner = $modx->getChunk($innerTpl, $fields);\\n    $row = $modx->getChunk($rowTpl, $fields);\\n    $innerOutput .= str_replace(\'[[+extUserRow]]\', $row, $inner);\\n    $i++;\\n}\\n\\n$output = str_replace(\'[[+extUserInner]]\', $innerOutput, $outer);\\n\\nreturn $output;","locked":0,"properties":"a:7:{s:15:\\"extUserInnerTpl\\";a:7:{s:4:\\"name\\";s:15:\\"extUserInnerTpl\\";s:4:\\"desc\\";s:12:\\"ce.inner_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:15:\\"extUserInnerTpl\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"extUserOuterTpl\\";a:7:{s:4:\\"name\\";s:15:\\"extUserOuterTpl\\";s:4:\\"desc\\";s:12:\\"ce.outer_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:15:\\"extUserOuterTpl\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"extUserRowTpl\\";a:7:{s:4:\\"name\\";s:13:\\"extUserRowTpl\\";s:4:\\"desc\\";s:10:\\"ce.row_tpl\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:13:\\"extUserRowTpl\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortby\\";a:7:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:28:\\"ce.get_ext_users_sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:8:\\"username\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortdir\\";a:7:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:29:\\"ce.get_ext_users_sortdir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"userDataClass\\";a:7:{s:4:\\"name\\";s:13:\\"userDataClass\\";s:4:\\"desc\\";s:29:\\"ce.class_for_user_data_object\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:8:\\"userData\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:22:\\"ce.get_ext_users_where\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * GetExtUsers snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 01-05-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Show user information\\n *\\n * Variables\\n * ---------\\n *\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n\\/* The extendeduser package should be pre-loaded\\n   due to being registered in the extension_packages\\n   System Setting *\\/\\n\\n$modx->lexicon->load(\'classextender:default\');\\n\\n\\n\\/* @var $scriptProperties array *\\/\\n$scriptProperties = isset($scriptProperties)\\n    ? $scriptProperties\\n    : array();\\n$sp = $scriptProperties;\\n\\n$userClass = $modx->getOption(\'userDataClass\', $sp, \'userData\');\\n\\n$where = $modx->getOption(\'where\', $sp, array());\\n$where = !empty($where)\\n    ? $modx->fromJSON($where)\\n    : array();\\n\\n$outerTpl = $modx->getOption(\'extUserOuterTpl\', $sp, \'extUserOuterTpl\');\\n$innerTpl = $modx->getOption(\'extUserInnerTpl\', $sp, \'extUserInnerTpl\');\\n$rowTpl = $modx->getOption(\'extUserRowTpl\', $sp, \'extUserRowTpl\');\\n$sortBy = $modx->getOption(\'sortby\', $sp, \'username\');\\n$sortDir = $modx->getOption(\'sortdir\', $sp, \'ASC\');\\n$limit = $modx->getOption(\'limit\', $sp, \'null\', true);\\n$offset = $modx->getOption(\'offset\', $sp, \'null\', true);\\n\\n$offset = ($offset === null) ? 0 : (int) $offset;\\n\\n$c = $modx->newQuery($userClass);\\n$c->sortby($sortBy, $sortDir);\\n$c->where($where);\\nif ($limit !== null) {\\n    $c->limit($limit, $offset);\\n}\\n\\n$users = $modx->getCollectionGraph($userClass, \'{\\"Profile\\":{},\\"User\\":{}}\', $c);\\n\\n$count = count($users);\\n\\nif (!$count) {\\n    return $modx->lexicon(\'ce.no_users_found\');\\n\\n}\\n\\n\\/* @var $user modUser *\\/\\n$i = 0;\\n$outer = $modx->getChunk($outerTpl);\\n\\n$output = \'\';\\n$innerOutput = \'\';\\nforeach ($users as $user) {\\n    $fields = $user->toArray();\\n    unset($fields[\'password\'], $fields[\'cachepwd\'], $fields[\'salt\'], $fields[\'hash_class\']);\\n    if ($user->Profile) {\\n        $fields = array_merge($user->Profile->toArray(), $fields);\\n    }\\n    if ($user->User) {\\n        $fields = array_merge($user->User->toArray(), $fields);\\n    }\\n    $inner = $modx->getChunk($innerTpl, $fields);\\n    $row = $modx->getChunk($rowTpl, $fields);\\n    $innerOutput .= str_replace(\'[[+extUserRow]]\', $row, $inner);\\n    $i++;\\n}\\n\\n$output = str_replace(\'[[+extUserInner]]\', $innerOutput, $outer);\\n\\nreturn $output;"}',
        'guid' => 'f3b40a80352705ffdfdbf1e69615f51d',
        'native_key' => 1,
        'signature' => '49704ebcb8440c7b3eed10df17e57acb',
      ),
      '6d542a98a9669c555eaac57f3db364ea' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":2,"source":0,"property_preprocess":0,"name":"GetExtResources","description":"Show resource information","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * GetExtResources snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 04-13-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Show resource information\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n\\/* The extendedresource package should be pre-loaded\\n   due to being registered in the extension_packages\\n   System Setting *\\/\\n\\n\\n$modx->lexicon->load(\'classextender:default\');\\n\\n\\/* @var $scriptProperties array *\\/\\n$scriptProperties = isset($scriptProperties)\\n    ? $scriptProperties\\n    : array();\\n$sp = $scriptProperties;\\n\\n$resourceClass = $modx->getOption(\'resourceDataClass\', $sp, \'resourceData\');\\n\\n$where = $modx->getOption(\'where\', $sp, array());\\n$where = !empty($where)\\n    ? $modx->fromJSON($where)\\n    : array();\\n\\n$sortBy = $modx->getOption(\'sortby\', $sp, \'pagetitle\');\\n$sortDir = $modx->getOption(\'sortdir\', $sp, \'ASC\');\\n\\n$outerTpl = $modx->getOption(\'extResourceOuterTpl\', $sp, \'extResourceOuterTpl\');\\n$innerTpl = $modx->getOption(\'extResourceInnerTpl\', $sp, \'extResourceInnerTpl\');\\n$rowTpl = $modx->getOption(\'extResourceRowTpl\', $sp, \'extResourceRowTpl\');\\n\\n\\n$c = $modx->newQuery($resourceClass);\\n$c->sortby($sortBy, $sortDir);\\n\\nif (! empty($where)) {\\n    $c->where($where);\\n}\\n\\n\\n$resources = $modx->getCollectionGraph($resourceClass, \'{\\"Resource\\":{}}\', $c);\\n\\n$count = count($resources);\\n\\nif (!$count) {\\n    return $modx->lexicon(\'ce.no_resources_found\');\\n\\n}\\n\\n\\/* @var $resource modResource *\\/\\n$i = 0;\\n$outer = $modx->getChunk($outerTpl);\\n\\n$output = \'\';\\n$innerOutput = \'\';\\nforeach ($resources as $resource) {\\n    $fields = $resource->toArray();\\n\\n    if ($resource->Resource) {\\n        $fields = array_merge($resource->Resource->toArray(), $fields);\\n    }\\n    $inner = $modx->getChunk($innerTpl, $fields);\\n    $row = $modx->getChunk($rowTpl, $fields);\\n    $innerOutput .= str_replace(\'[[+extResourceRow]]\', $row, $inner);\\n    $i++;\\n}\\n\\n$output = str_replace(\'[[+extResourceInner]]\', $innerOutput, $outer);\\n\\nreturn $output;","locked":0,"properties":"a:7:{s:19:\\"extResourceInnerTpl\\";a:7:{s:4:\\"name\\";s:19:\\"extResourceInnerTpl\\";s:4:\\"desc\\";s:35:\\"ce.get_ext_resources_inner_tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:19:\\"ExtResourceInnerTpl\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:19:\\"extResourceOuterTpl\\";a:7:{s:4:\\"name\\";s:19:\\"extResourceOuterTpl\\";s:4:\\"desc\\";s:35:\\"ce.get_ext_resources_outer_tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:19:\\"ExtResourceOuterTpl\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"extResourceRowTpl\\";a:7:{s:4:\\"name\\";s:17:\\"extResourceRowTpl\\";s:4:\\"desc\\";s:33:\\"ce.get_ext_resources_row_tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:17:\\"ExtResourceRowTpl\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"resourceDataClass\\";a:7:{s:4:\\"name\\";s:17:\\"resourceDataClass\\";s:4:\\"desc\\";s:22:\\"cd.resource_class_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:12:\\"resourceData\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"sortby\\";a:7:{s:4:\\"name\\";s:6:\\"sortby\\";s:4:\\"desc\\";s:32:\\"ce.get_ext_resources_sortby_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:9:\\"pagetitle\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"sortdir\\";a:7:{s:4:\\"name\\";s:7:\\"sortdir\\";s:4:\\"desc\\";s:33:\\"ce.get_ext_resources_sortdir_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:3:\\"ASC\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"where\\";a:7:{s:4:\\"name\\";s:5:\\"where\\";s:4:\\"desc\\";s:31:\\"ce.get_ext_resources_where_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * GetExtResources snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 04-13-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Show resource information\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n\\/* The extendedresource package should be pre-loaded\\n   due to being registered in the extension_packages\\n   System Setting *\\/\\n\\n\\n$modx->lexicon->load(\'classextender:default\');\\n\\n\\/* @var $scriptProperties array *\\/\\n$scriptProperties = isset($scriptProperties)\\n    ? $scriptProperties\\n    : array();\\n$sp = $scriptProperties;\\n\\n$resourceClass = $modx->getOption(\'resourceDataClass\', $sp, \'resourceData\');\\n\\n$where = $modx->getOption(\'where\', $sp, array());\\n$where = !empty($where)\\n    ? $modx->fromJSON($where)\\n    : array();\\n\\n$sortBy = $modx->getOption(\'sortby\', $sp, \'pagetitle\');\\n$sortDir = $modx->getOption(\'sortdir\', $sp, \'ASC\');\\n\\n$outerTpl = $modx->getOption(\'extResourceOuterTpl\', $sp, \'extResourceOuterTpl\');\\n$innerTpl = $modx->getOption(\'extResourceInnerTpl\', $sp, \'extResourceInnerTpl\');\\n$rowTpl = $modx->getOption(\'extResourceRowTpl\', $sp, \'extResourceRowTpl\');\\n\\n\\n$c = $modx->newQuery($resourceClass);\\n$c->sortby($sortBy, $sortDir);\\n\\nif (! empty($where)) {\\n    $c->where($where);\\n}\\n\\n\\n$resources = $modx->getCollectionGraph($resourceClass, \'{\\"Resource\\":{}}\', $c);\\n\\n$count = count($resources);\\n\\nif (!$count) {\\n    return $modx->lexicon(\'ce.no_resources_found\');\\n\\n}\\n\\n\\/* @var $resource modResource *\\/\\n$i = 0;\\n$outer = $modx->getChunk($outerTpl);\\n\\n$output = \'\';\\n$innerOutput = \'\';\\nforeach ($resources as $resource) {\\n    $fields = $resource->toArray();\\n\\n    if ($resource->Resource) {\\n        $fields = array_merge($resource->Resource->toArray(), $fields);\\n    }\\n    $inner = $modx->getChunk($innerTpl, $fields);\\n    $row = $modx->getChunk($rowTpl, $fields);\\n    $innerOutput .= str_replace(\'[[+extResourceRow]]\', $row, $inner);\\n    $i++;\\n}\\n\\n$output = str_replace(\'[[+extResourceInner]]\', $innerOutput, $outer);\\n\\nreturn $output;"}',
        'guid' => '2bdfab6384dd2bb6137b26b5125ec47b',
        'native_key' => 2,
        'signature' => 'c9eac5b3e24d57beecbf2a901ae39ec2',
      ),
      '357f5d668451f1de1fd8a0b500f3fcfe' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":3,"source":0,"property_preprocess":0,"name":"SetUserPlaceholders","description":"Set placeholders for extra user fields","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * SetUserPlaceholders snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 04-13-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Set placeholders for extra user fields\\n *\\n * Variables\\n * ---------\\n *\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n$modx->lexicon->load(\'classextender:default\');\\n\\n$sp = $scriptProperties;\\n$userId = $modx->getOption(\'userId\', $sp, NULL);\\n$prefix = $modx->getOption(\'prefix\', $sp, \'\');\\n$dataClass = $modx->getOption(\'userDataClass\', $sp, \'userData\');\\n\\n$c = $modx->newQuery($dataClass);\\n\\n\\nif (!empty($userId)) {\\n    $c->where(array(\'userdata_id\' => $userId));\\n} else {\\n    $c->where(array(\'userdata_id\' => $modx->user->get(\'id\')));\\n}\\n\\n$data = $modx->getObjectGraph($dataClass, \'{\\"Profile\\":{},\\"User\\":{}}\', $c);\\n\\nif (!$data) {\\n    return $modx->lexicon(\'ce.user_not_found\');\\n}\\n\\nif ($data) {\\n    $modx->toPlaceholders($data, $prefix);\\n}\\nif ($data->Profile) {\\n    $modx->toPlaceholders($data->Profile, $prefix);\\n}\\n\\nif ($data->User) {\\n    $modx->toPlaceholders($data->User, $prefix);\\n}\\n\\nreturn \'\';","locked":0,"properties":"a:3:{s:6:\\"prefix\\";a:7:{s:4:\\"name\\";s:6:\\"prefix\\";s:4:\\"desc\\";s:19:\\"ce.user_prefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"userDataClass\\";a:7:{s:4:\\"name\\";s:13:\\"userDataClass\\";s:4:\\"desc\\";s:29:\\"ce.class_for_user_data_object\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:8:\\"userData\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"userId\\";a:7:{s:4:\\"name\\";s:6:\\"userId\\";s:4:\\"desc\\";s:15:\\"ce.user_id_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * SetUserPlaceholders snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 04-13-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Set placeholders for extra user fields\\n *\\n * Variables\\n * ---------\\n *\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n$modx->lexicon->load(\'classextender:default\');\\n\\n$sp = $scriptProperties;\\n$userId = $modx->getOption(\'userId\', $sp, NULL);\\n$prefix = $modx->getOption(\'prefix\', $sp, \'\');\\n$dataClass = $modx->getOption(\'userDataClass\', $sp, \'userData\');\\n\\n$c = $modx->newQuery($dataClass);\\n\\n\\nif (!empty($userId)) {\\n    $c->where(array(\'userdata_id\' => $userId));\\n} else {\\n    $c->where(array(\'userdata_id\' => $modx->user->get(\'id\')));\\n}\\n\\n$data = $modx->getObjectGraph($dataClass, \'{\\"Profile\\":{},\\"User\\":{}}\', $c);\\n\\nif (!$data) {\\n    return $modx->lexicon(\'ce.user_not_found\');\\n}\\n\\nif ($data) {\\n    $modx->toPlaceholders($data, $prefix);\\n}\\nif ($data->Profile) {\\n    $modx->toPlaceholders($data->Profile, $prefix);\\n}\\n\\nif ($data->User) {\\n    $modx->toPlaceholders($data->User, $prefix);\\n}\\n\\nreturn \'\';"}',
        'guid' => '5025639276392408079a5f573eaea143',
        'native_key' => 3,
        'signature' => 'bb009f43f44aab9c36f42cdfb51e1388',
      ),
      '8297a6c5ce973c2578f3a087489fc6b7' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":4,"source":0,"property_preprocess":0,"name":"SetResourcePlaceholders","description":"Set placeholders for extra resource fields","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * SetResourcePlaceholders snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 04-13-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Set placeholders for extra resource fields\\n *\\n * Variables\\n * ---------\\n *\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n$modx->lexicon->load(\'classextender:default\');\\n\\n$sp = $scriptProperties;\\n$resourceId = $modx->getOption(\'resourceId\', $sp, NULL);\\n$prefix = $modx->getOption(\'prefix\', $sp, \'\');\\n\\nif ($resourceId != NULL) {\\n    $resource = $modx->getObject(\'modResource\', $resourceId);\\n    if (!$resource) {\\n        return $modx->lexicon(\'ce.resource_not_found\');\\n    }\\n} else {\\n    $resource = $modx->resource;\\n}\\n\\n$data = $modx->getObject(\'resourceData\',\\n    array(\'resourcedata_id\' => $resource->get(\'id\')));\\n\\nif ($data) {\\n    $modx->toPlaceholders($data, $prefix);\\n}\\n\\n$modx->toPlaceholders($resource->toArray(), $prefix);\\n\\nreturn \'\';","locked":0,"properties":"a:2:{s:10:\\"resourceId\\";a:7:{s:4:\\"name\\";s:10:\\"resourceId\\";s:4:\\"desc\\";s:19:\\"ce.resource_id_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"prefix\\";a:7:{s:4:\\"name\\";s:6:\\"prefix\\";s:4:\\"desc\\";s:23:\\"ce.resource_prefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * SetResourcePlaceholders snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 04-13-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Set placeholders for extra resource fields\\n *\\n * Variables\\n * ---------\\n *\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n$modx->lexicon->load(\'classextender:default\');\\n\\n$sp = $scriptProperties;\\n$resourceId = $modx->getOption(\'resourceId\', $sp, NULL);\\n$prefix = $modx->getOption(\'prefix\', $sp, \'\');\\n\\nif ($resourceId != NULL) {\\n    $resource = $modx->getObject(\'modResource\', $resourceId);\\n    if (!$resource) {\\n        return $modx->lexicon(\'ce.resource_not_found\');\\n    }\\n} else {\\n    $resource = $modx->resource;\\n}\\n\\n$data = $modx->getObject(\'resourceData\',\\n    array(\'resourcedata_id\' => $resource->get(\'id\')));\\n\\nif ($data) {\\n    $modx->toPlaceholders($data, $prefix);\\n}\\n\\n$modx->toPlaceholders($resource->toArray(), $prefix);\\n\\nreturn \'\';"}',
        'guid' => '10fcaaa400c0b2562522ff0b4eb3d901',
        'native_key' => 4,
        'signature' => '18ad4500253d03ea7e7cab508369b690',
      ),
      '8cbc2528cb942655b05404b39c7188b0' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":5,"source":0,"property_preprocess":0,"name":"ExtUserUpdateProfile","description":"Set placeholders for and update extended user data","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * ExtUserUpdateProfile snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 03-23-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Set placeholders for and update extended user data\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n$modx->lexicon->load(\'login:updateprofile\');\\n\\n$submission = isset($_POST[\'login-updprof-btn\']) && ($_POST[\'login-updprof-btn\'] == $modx->lexicon(\'login.update_profile\'));\\n\\n$data = null;\\n$user = null;\\n$fields = array();\\n\\n\\/* @var $data userData *\\/\\n\\nif (isset($modx->user) && ($modx->user instanceof modUser)) {\\n    \\n    $user =& $modx->user;\\n    $data = $modx->getObject(\'userData\',\\n        array(\'userdata_id\' => $user->get(\'id\')), false);\\n    if ($data) {\\n        $fields = $data->toArray();\\n    } else {\\n        $data = $modx->newObject(\'userData\');\\n        if ($data) {\\n            $data->set(\'userdata_id\', $user->get(\'id\'));\\n            $fields = $data->toArray();\\n            \\n        }\\n    }\\n}\\n\\nif (! is_array($fields) || empty($fields)) {\\n    return \'\';\\n}\\n\\n\\/* Convert any nulls to \'\' *\\/\\nif (!empty($fields)) {\\n    foreach($fields as $key => $value) {\\n        if (empty($value) && ($value !== \'0\')) {\\n            $fields[$key] = \'\';\\n        }\\n    }\\n    $modx->setPlaceholders($fields);\\n}\\n\\nif ($submission) {\\n    $modx->request->sanitizeRequest();\\n    $dirty = false;\\n    foreach ($fields as $key => $value) {\\n        if (isset($_POST[$key])) {\\n            if ($value !== $_POST[$key]) {\\n                $data->set($key, $_POST[$key]);\\n                $dirty = true;\\n            }\\n        }\\n    }\\n\\n    if ($dirty) {\\n        $data->save();\\n    }\\n}\\n\\nreturn \'\';","locked":0,"properties":null,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * ExtUserUpdateProfile snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 03-23-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Set placeholders for and update extended user data\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n$modx->lexicon->load(\'login:updateprofile\');\\n\\n$submission = isset($_POST[\'login-updprof-btn\']) && ($_POST[\'login-updprof-btn\'] == $modx->lexicon(\'login.update_profile\'));\\n\\n$data = null;\\n$user = null;\\n$fields = array();\\n\\n\\/* @var $data userData *\\/\\n\\nif (isset($modx->user) && ($modx->user instanceof modUser)) {\\n    \\n    $user =& $modx->user;\\n    $data = $modx->getObject(\'userData\',\\n        array(\'userdata_id\' => $user->get(\'id\')), false);\\n    if ($data) {\\n        $fields = $data->toArray();\\n    } else {\\n        $data = $modx->newObject(\'userData\');\\n        if ($data) {\\n            $data->set(\'userdata_id\', $user->get(\'id\'));\\n            $fields = $data->toArray();\\n            \\n        }\\n    }\\n}\\n\\nif (! is_array($fields) || empty($fields)) {\\n    return \'\';\\n}\\n\\n\\/* Convert any nulls to \'\' *\\/\\nif (!empty($fields)) {\\n    foreach($fields as $key => $value) {\\n        if (empty($value) && ($value !== \'0\')) {\\n            $fields[$key] = \'\';\\n        }\\n    }\\n    $modx->setPlaceholders($fields);\\n}\\n\\nif ($submission) {\\n    $modx->request->sanitizeRequest();\\n    $dirty = false;\\n    foreach ($fields as $key => $value) {\\n        if (isset($_POST[$key])) {\\n            if ($value !== $_POST[$key]) {\\n                $data->set($key, $_POST[$key]);\\n                $dirty = true;\\n            }\\n        }\\n    }\\n\\n    if ($dirty) {\\n        $data->save();\\n    }\\n}\\n\\nreturn \'\';"}',
        'guid' => 'e10f45cb1215eb12dd85454c57127700',
        'native_key' => 5,
        'signature' => 'c085f24cbde9aaf5aece70d4eb9563fc',
      ),
      '957bc5153922f170153fc203ad62663c' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":6,"source":0,"property_preprocess":0,"name":"UserSearchForm","description":"Show users selected by category","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * UserSearchForm snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 01-05-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Show user information based on search\\n *\\n * Variables\\n * ---------\\n *\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n\\/* Properties\\n *\\n * @property &extFormTpl textfield -- Tpl chunk to use for user\\n * search form; Default: ExtUserSearchFormTpl.\\n *\\/\\n\\n\\n$formTpl = $modx->getOption(\'extFormTpl\', $scriptProperties, \'ExtUserSearchFormTpl\');\\n\\n\\n$output = $modx->getChunk($formTpl);\\n\\n$pFirstName = $modx->getOption(\'user_search_first_name\', $_POST, \'\');\\n$pLastName = $modx->getOption(\'user_search_last_name\', $_POST, \'\');\\n\\n$modx->setPlaceholder(\'user_search_first_name\', $pFirstName);\\n$modx->setPlaceholder(\'user_search_last_name\', $pLastName);\\n\\n\\n\\n$fields = array();\\n\\nif (isset($_POST[\'submit-var\']) && $_POST[\'submit-var\'] == \'etaoinshrdlu\') {\\n\\n    $fields[\'where\'] = \'{\\"firstName:=\\":\\"\' . $pFirstName . \'\\",\\"OR:lastName:=\\":\\"\' . $pLastName . \'\\"}\';\\n\\n    $results = $modx->runSnippet(\'GetExtUsers\', $fields);\\n\\n}\\n\\nif (! empty ($results) ){\\n    $modx->SetPlaceholder(\'user_search.results_heading\',\\n        $modx->lexicon(\'ce_user_search_results_heading\'));\\n    $modx->setPlaceholder(\'user_search.results\', $results);\\n}\\nreturn $output;","locked":0,"properties":"a:1:{s:10:\\"extFormTpl\\";a:7:{s:4:\\"name\\";s:10:\\"extFormTpl\\";s:4:\\"desc\\";s:20:\\"ce.ext_form_tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:20:\\"ExtUserSearchFormTpl\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * UserSearchForm snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 01-05-2014\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Show user information based on search\\n *\\n * Variables\\n * ---------\\n *\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n\\/* Properties\\n *\\n * @property &extFormTpl textfield -- Tpl chunk to use for user\\n * search form; Default: ExtUserSearchFormTpl.\\n *\\/\\n\\n\\n$formTpl = $modx->getOption(\'extFormTpl\', $scriptProperties, \'ExtUserSearchFormTpl\');\\n\\n\\n$output = $modx->getChunk($formTpl);\\n\\n$pFirstName = $modx->getOption(\'user_search_first_name\', $_POST, \'\');\\n$pLastName = $modx->getOption(\'user_search_last_name\', $_POST, \'\');\\n\\n$modx->setPlaceholder(\'user_search_first_name\', $pFirstName);\\n$modx->setPlaceholder(\'user_search_last_name\', $pLastName);\\n\\n\\n\\n$fields = array();\\n\\nif (isset($_POST[\'submit-var\']) && $_POST[\'submit-var\'] == \'etaoinshrdlu\') {\\n\\n    $fields[\'where\'] = \'{\\"firstName:=\\":\\"\' . $pFirstName . \'\\",\\"OR:lastName:=\\":\\"\' . $pLastName . \'\\"}\';\\n\\n    $results = $modx->runSnippet(\'GetExtUsers\', $fields);\\n\\n}\\n\\nif (! empty ($results) ){\\n    $modx->SetPlaceholder(\'user_search.results_heading\',\\n        $modx->lexicon(\'ce_user_search_results_heading\'));\\n    $modx->setPlaceholder(\'user_search.results\', $results);\\n}\\nreturn $output;"}',
        'guid' => '01be241132a749d0e486dab2f541050a',
        'native_key' => 6,
        'signature' => 'f49364299fb5249eccd5ca96dbffc11b',
      ),
      '42181748c14d008b9ca627e547da1dc8' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":7,"source":0,"property_preprocess":0,"name":"ClassExtender","description":"Extend a MODX class","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * ClassExtender snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 11-10-2013\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Extend a MODX class\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\nif (!defined(\'MODX_CORE_PATH\')) {\\n    $path1 = dirname(dirname(dirname(dirname(dirname(dirname(__FILE__)))))) . \'\\/_build\\/build.config.php\';\\n    if (file_exists($path1)) {\\n        include $path1;\\n    } else {\\n        $path2 = dirname(dirname(dirname(__FILE__))) . \'\\/_build\\/build.config.php\';\\n        if (file_exists($path2)) {\\n            include($path2);\\n        }\\n    }\\n    if (!defined(\'MODX_CORE_PATH\')) {\\n        session_write_close();\\n        die(\'[ClassExtender] Could not find build.config.php\');\\n    }\\n    require_once MODX_CORE_PATH . \'model\\/modx\\/modx.class.php\';\\n    $modx = new modX();\\n    \\/* Initialize and set up logging *\\/\\n    $modx->initialize(\'mgr\');\\n    $modx->getService(\'error\', \'error.modError\', \'\', \'\');\\n    $modx->setLogLevel(xPDO::LOG_LEVEL_INFO);\\n    $modx->setLogTarget(XPDO_CLI_MODE\\n        ? \'ECHO\'\\n        : \'HTML\');\\n\\n    \\/* This section will only run when operating outside of MODX *\\/\\n    if (php_sapi_name() == \'cli\') {\\n        $cliMode = true;\\n        \\/* Set $modx->user and $modx->resource to avoid\\n         * other people\'s plugins from crashing us *\\/\\n        $modx->getRequest();\\n        $homeId = $modx->getOption(\'site_start\');\\n        $homeResource = $modx->getObject(\'modResource\', $homeId);\\n\\n        if ($homeResource instanceof modResource) {\\n            $modx->resource = $homeResource;\\n        } else {\\n            echo \\"\\\\nNo Resource\\\\n\\";\\n        }\\n    }\\n}\\n\\nif (!$modx->user->hasSessionContext(\'mgr\')) {\\n    die (\'Unauthorized Access\');\\n}\\n\\nrequire_once $modx->getOption(\'ce.core_path\', NULL, $modx->getOption(\'core_path\') . \'components\\/classextender\\/\') . \'model\\/classextender\\/classextender.class.php\';\\n\\/\\/ include \'classextender.class.php\';\\n\\n$modx->lexicon->load(\'classextender:default\');\\n$props =& $scriptProperties;\\n$ce = new ClassExtender($modx, $props);\\nif (! $ce instanceof ClassExtender) {\\n    die ($this->modx->lexicon(\'ce.no_class_extender\'));\\n\\n}\\n$ce->init();\\n$output .= $ce->displayForm();\\n\\nif ($ce->hasError()) {\\n    $modx->setPlaceholder(\'ce_results\', $ce->getOutput());\\n    return \'[[+ce_results]]\';\\n}\\n\\nif (isset($_POST[\'submitVar\']) && $_POST[\'submitVar\'] == \'submitVar\') {\\n    $ce->process();\\n    $cm = $modx->getCacheManager();\\n    $cm->refresh();\\n}\\n\\n$modx->setPlaceholder(\'ce_results\', $ce->getOutput());\\n\\nreturn $output;","locked":0,"properties":"a:1:{s:11:\\"tablePrefix\\";a:7:{s:4:\\"name\\";s:11:\\"tablePrefix\\";s:4:\\"desc\\";s:20:\\"ce.table_prefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";a:0:{}s:5:\\"value\\";s:4:\\"ext_\\";s:7:\\"lexicon\\";s:24:\\"classextender:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * ClassExtender snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 11-10-2013\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Extend a MODX class\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\nif (!defined(\'MODX_CORE_PATH\')) {\\n    $path1 = dirname(dirname(dirname(dirname(dirname(dirname(__FILE__)))))) . \'\\/_build\\/build.config.php\';\\n    if (file_exists($path1)) {\\n        include $path1;\\n    } else {\\n        $path2 = dirname(dirname(dirname(__FILE__))) . \'\\/_build\\/build.config.php\';\\n        if (file_exists($path2)) {\\n            include($path2);\\n        }\\n    }\\n    if (!defined(\'MODX_CORE_PATH\')) {\\n        session_write_close();\\n        die(\'[ClassExtender] Could not find build.config.php\');\\n    }\\n    require_once MODX_CORE_PATH . \'model\\/modx\\/modx.class.php\';\\n    $modx = new modX();\\n    \\/* Initialize and set up logging *\\/\\n    $modx->initialize(\'mgr\');\\n    $modx->getService(\'error\', \'error.modError\', \'\', \'\');\\n    $modx->setLogLevel(xPDO::LOG_LEVEL_INFO);\\n    $modx->setLogTarget(XPDO_CLI_MODE\\n        ? \'ECHO\'\\n        : \'HTML\');\\n\\n    \\/* This section will only run when operating outside of MODX *\\/\\n    if (php_sapi_name() == \'cli\') {\\n        $cliMode = true;\\n        \\/* Set $modx->user and $modx->resource to avoid\\n         * other people\'s plugins from crashing us *\\/\\n        $modx->getRequest();\\n        $homeId = $modx->getOption(\'site_start\');\\n        $homeResource = $modx->getObject(\'modResource\', $homeId);\\n\\n        if ($homeResource instanceof modResource) {\\n            $modx->resource = $homeResource;\\n        } else {\\n            echo \\"\\\\nNo Resource\\\\n\\";\\n        }\\n    }\\n}\\n\\nif (!$modx->user->hasSessionContext(\'mgr\')) {\\n    die (\'Unauthorized Access\');\\n}\\n\\nrequire_once $modx->getOption(\'ce.core_path\', NULL, $modx->getOption(\'core_path\') . \'components\\/classextender\\/\') . \'model\\/classextender\\/classextender.class.php\';\\n\\/\\/ include \'classextender.class.php\';\\n\\n$modx->lexicon->load(\'classextender:default\');\\n$props =& $scriptProperties;\\n$ce = new ClassExtender($modx, $props);\\nif (! $ce instanceof ClassExtender) {\\n    die ($this->modx->lexicon(\'ce.no_class_extender\'));\\n\\n}\\n$ce->init();\\n$output .= $ce->displayForm();\\n\\nif ($ce->hasError()) {\\n    $modx->setPlaceholder(\'ce_results\', $ce->getOutput());\\n    return \'[[+ce_results]]\';\\n}\\n\\nif (isset($_POST[\'submitVar\']) && $_POST[\'submitVar\'] == \'submitVar\') {\\n    $ce->process();\\n    $cm = $modx->getCacheManager();\\n    $cm->refresh();\\n}\\n\\n$modx->setPlaceholder(\'ce_results\', $ce->getOutput());\\n\\nreturn $output;"}',
        'guid' => '6465593ed6f1c71ad8857852988bf67d',
        'native_key' => 7,
        'signature' => '83f455bba110ba8d7d848bb03134be7b',
      ),
      'f6b539ab56c9844a1b5426000e510199' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":8,"source":0,"property_preprocess":0,"name":"ExtUserRegisterPosthook","description":"Update extended user data on registration","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * ExtUserRegisterPosthook snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 05-04-2015\\n *\\n * Thanks to MODX Forum contributor Karl Forsyth for his contributions to this code.\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Update extended user data on registration\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n\\/** Usage:\\n * Add the custom user fields to the register form and modify the Register tag:\\n\\n\\n[[!Register?\\n    &submitVar=`loginRegisterBtn`\\n    ...\\n    &useExtended=`0`\\n    &postHooks=`ExtUserRegister`\\n]] *\\/\\n\\n\\n$submission = isset($_POST[\'loginRegisterBtn\']) && ($_POST[\'loginRegisterBtn\'] == \'Register\');\\n\\n$data = NULL;\\n$newUser = NULL;\\n$userName = NULL;\\n$userID = NULL;\\n$fields = array();\\n\\n\\/* @var $data userData *\\/\\n\\nif (isset($modx->user) && ($modx->user instanceof modUser)) {\\n    $usernameField = $modx->getOption(\'usernameField\', $scriptProperties, \'username\', true);\\n\\n    $userName = $hook->getValue($usernameField);\\n\\n   \\/* Get new user ID via username *\\/\\n    $newUser = $modx->getObject(\\"modUser\\", array(\'username\' => $userName));\\n    $userId = $newUser->get(\'id\');\\n\\n\\n    $data = $modx->getObject(\'userData\',\\n        array(\'userdata_id\' => $userId), false);\\n    if ($data) {\\n        $fields = $data->toArray();\\n    } else {\\n        $data = $modx->newObject(\'userData\');\\n        if ($data) {\\n            $data->set(\'userdata_id\', $userId);\\n            $fields = $data->toArray();\\n        }\\n    }\\n}\\n\\nif (!is_array($fields) || empty($fields)) {\\n    $hook->addError(\'username\', \'[ExtUserRegisterPosthook] Error getting user data\');\\n    return false;\\n}\\n\\n\\/* Convert any nulls to \'\' *\\/\\nif (!empty($fields)) {\\n    foreach ($fields as $key => $value) {\\n        if (empty($value) && ($value !== \'0\')) {\\n            $fields[$key] = \'\';\\n        }\\n    }\\n    $modx->setPlaceholders($fields);\\n}\\n\\nif ($submission) {\\n    $modx->request->sanitizeRequest();\\n    $dirty = false;\\n\\n    foreach ($fields as $key => $value) {\\n        if (isset($_POST[$key])) {\\n            if ($value !== $_POST[$key]) {\\n                $data->set($key, $_POST[$key]);\\n                $dirty = true;\\n            }\\n        }\\n    }\\n\\n    if ($dirty) {\\n        if ($data->save()) {\\n            \\/\\/ $msg = \'[ExtUserRegisterPosthook] Saved successfully\';\\n            \\/\\/ $modx->log(modX::LOG_LEVEL_ERROR, $msg);\\n        } else {\\n            $msg = \'[ExtUserRegisterPosthook] Save failed\';\\n            $hook->addError(\'username\', $msg);\\n            return false;\\n        }\\n    }\\n}\\n\\nreturn true;","locked":0,"properties":null,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * ExtUserRegisterPosthook snippet for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 05-04-2015\\n *\\n * Thanks to MODX Forum contributor Karl Forsyth for his contributions to this code.\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Update extended user data on registration\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n\\/** Usage:\\n * Add the custom user fields to the register form and modify the Register tag:\\n\\n\\n[[!Register?\\n    &submitVar=`loginRegisterBtn`\\n    ...\\n    &useExtended=`0`\\n    &postHooks=`ExtUserRegister`\\n]] *\\/\\n\\n\\n$submission = isset($_POST[\'loginRegisterBtn\']) && ($_POST[\'loginRegisterBtn\'] == \'Register\');\\n\\n$data = NULL;\\n$newUser = NULL;\\n$userName = NULL;\\n$userID = NULL;\\n$fields = array();\\n\\n\\/* @var $data userData *\\/\\n\\nif (isset($modx->user) && ($modx->user instanceof modUser)) {\\n    $usernameField = $modx->getOption(\'usernameField\', $scriptProperties, \'username\', true);\\n\\n    $userName = $hook->getValue($usernameField);\\n\\n   \\/* Get new user ID via username *\\/\\n    $newUser = $modx->getObject(\\"modUser\\", array(\'username\' => $userName));\\n    $userId = $newUser->get(\'id\');\\n\\n\\n    $data = $modx->getObject(\'userData\',\\n        array(\'userdata_id\' => $userId), false);\\n    if ($data) {\\n        $fields = $data->toArray();\\n    } else {\\n        $data = $modx->newObject(\'userData\');\\n        if ($data) {\\n            $data->set(\'userdata_id\', $userId);\\n            $fields = $data->toArray();\\n        }\\n    }\\n}\\n\\nif (!is_array($fields) || empty($fields)) {\\n    $hook->addError(\'username\', \'[ExtUserRegisterPosthook] Error getting user data\');\\n    return false;\\n}\\n\\n\\/* Convert any nulls to \'\' *\\/\\nif (!empty($fields)) {\\n    foreach ($fields as $key => $value) {\\n        if (empty($value) && ($value !== \'0\')) {\\n            $fields[$key] = \'\';\\n        }\\n    }\\n    $modx->setPlaceholders($fields);\\n}\\n\\nif ($submission) {\\n    $modx->request->sanitizeRequest();\\n    $dirty = false;\\n\\n    foreach ($fields as $key => $value) {\\n        if (isset($_POST[$key])) {\\n            if ($value !== $_POST[$key]) {\\n                $data->set($key, $_POST[$key]);\\n                $dirty = true;\\n            }\\n        }\\n    }\\n\\n    if ($dirty) {\\n        if ($data->save()) {\\n            \\/\\/ $msg = \'[ExtUserRegisterPosthook] Saved successfully\';\\n            \\/\\/ $modx->log(modX::LOG_LEVEL_ERROR, $msg);\\n        } else {\\n            $msg = \'[ExtUserRegisterPosthook] Save failed\';\\n            $hook->addError(\'username\', $msg);\\n            return false;\\n        }\\n    }\\n}\\n\\nreturn true;"}',
        'guid' => 'c799b531c02ed306470b586191925b18',
        'native_key' => 8,
        'signature' => 'fcdd8317877e85719657c7c76df0b033',
      ),
    ),
    'Plugins' => 
    array (
      '6409f258cf52df26e4c02a469ddeae28' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modPlugin',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"ExtraResourceFields","description":"Add and process extra fields in Create\\/Edit Resource form","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\n * ExtraResourceFields plugin for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 12-10-2013\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Add and process extra fields in Create\\/Edit Resource form\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n$fields = array();\\n$data = null;\\n\\n\\/** @var $data xPDOObject *\\/\\n\\/** @var $resource modResource *\\/\\nif ($resource && $resource instanceof modResource) {\\n    $data = $modx->getObject(\'resourceData\',\\n        array(\'resourcedata_id\' => $resource->get(\'id\')));\\n}\\n\\nif (! $data) {\\n    $data = $modx->newObject(\'resourceData\');\\n}\\nif ($data) {\\n    $fields = $data->toArray();\\n} else {\\n    return \'\';\\n}\\n\\nswitch ($modx->event->name) {\\n    case \'OnDocFormPrerender\':\\n        \\/* if you want to add custom scripts, css, etc, register them here *\\/\\n        break;\\n    case \'OnDocFormRender\':\\n        if ($data) {\\n            \\/* Set fields with values from DB (if any) *\\/\\n            foreach ($fields as $key => $value) {\\n                \\/* Make sure there are no null values *\\/\\n                if ($value === null ) {\\n                    $fields[$key] = \'\';\\n                }\\n            }\\n        }\\n\\n        \\/* now do the HTML *\\/\\n\\n        $extraFields = $modx->getChunk(\'MyExtraResourceFields\', $fields);\\n\\n        \\/* Add our custom fields to the Create\\/Edit Resource form *\\/\\n        $modx->event->output($extraFields);\\n        break;\\n    case \'OnDocFormSave\':\\n\\n        if (!$data) {\\n            $modx->log(modX::LOG_LEVEL_ERROR, \'[ExtraResourceFields] No Data object\');\\n            return;\\n        }\\n        if (!$resource) {\\n            $modx->log(modX::LOG_LEVEL_ERROR, \'[ExtraResourceFields] No Resource object\');\\n            return;\\n        }\\n        $data->set(\'resourcedata_id\', $resource->get(\'id\'));\\n        $fields = array_keys($fields);\\n        $postKeys = array_keys($_POST);\\n        $dirty = false;\\n        foreach($fields as $field) {\\n            if ($field === \'id\') {\\n                continue;\\n            }\\n            if (in_array($field, $postKeys)) {\\n                if ($_POST[$field] != $data->get($field)) {\\n                    if (empty($_POST[$field])) {\\n                        $_POST[$field] = \'\';\\n                    }\\n                    $data->set($field, $_POST[$field]);\\n                    $dirty = true;\\n                }\\n            }\\n        }\\n\\n        if ($dirty) {\\n            $data->save();\\n        }\\n\\n        break;\\n\\n    case \'OnEmptyTrash\':\\n        \\/** @var $resources array() *\\/\\n        foreach($resources as $resource) {\\n            $data = $modx->getObject(\'resourceData\', array(\'resourcedata_id\' => $resource->get(\'id\')));\\n            if ($data) {\\n                $data->remove();\\n            }\\n        }\\n\\n        break;\\n}\\nreturn;","locked":0,"properties":"a:0:{}","disabled":1,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * ExtraResourceFields plugin for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 12-10-2013\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Add and process extra fields in Create\\/Edit Resource form\\n *\\n * Variables\\n * ---------\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n **\\/\\n\\n$fields = array();\\n$data = null;\\n\\n\\/** @var $data xPDOObject *\\/\\n\\/** @var $resource modResource *\\/\\nif ($resource && $resource instanceof modResource) {\\n    $data = $modx->getObject(\'resourceData\',\\n        array(\'resourcedata_id\' => $resource->get(\'id\')));\\n}\\n\\nif (! $data) {\\n    $data = $modx->newObject(\'resourceData\');\\n}\\nif ($data) {\\n    $fields = $data->toArray();\\n} else {\\n    return \'\';\\n}\\n\\nswitch ($modx->event->name) {\\n    case \'OnDocFormPrerender\':\\n        \\/* if you want to add custom scripts, css, etc, register them here *\\/\\n        break;\\n    case \'OnDocFormRender\':\\n        if ($data) {\\n            \\/* Set fields with values from DB (if any) *\\/\\n            foreach ($fields as $key => $value) {\\n                \\/* Make sure there are no null values *\\/\\n                if ($value === null ) {\\n                    $fields[$key] = \'\';\\n                }\\n            }\\n        }\\n\\n        \\/* now do the HTML *\\/\\n\\n        $extraFields = $modx->getChunk(\'MyExtraResourceFields\', $fields);\\n\\n        \\/* Add our custom fields to the Create\\/Edit Resource form *\\/\\n        $modx->event->output($extraFields);\\n        break;\\n    case \'OnDocFormSave\':\\n\\n        if (!$data) {\\n            $modx->log(modX::LOG_LEVEL_ERROR, \'[ExtraResourceFields] No Data object\');\\n            return;\\n        }\\n        if (!$resource) {\\n            $modx->log(modX::LOG_LEVEL_ERROR, \'[ExtraResourceFields] No Resource object\');\\n            return;\\n        }\\n        $data->set(\'resourcedata_id\', $resource->get(\'id\'));\\n        $fields = array_keys($fields);\\n        $postKeys = array_keys($_POST);\\n        $dirty = false;\\n        foreach($fields as $field) {\\n            if ($field === \'id\') {\\n                continue;\\n            }\\n            if (in_array($field, $postKeys)) {\\n                if ($_POST[$field] != $data->get($field)) {\\n                    if (empty($_POST[$field])) {\\n                        $_POST[$field] = \'\';\\n                    }\\n                    $data->set($field, $_POST[$field]);\\n                    $dirty = true;\\n                }\\n            }\\n        }\\n\\n        if ($dirty) {\\n            $data->save();\\n        }\\n\\n        break;\\n\\n    case \'OnEmptyTrash\':\\n        \\/** @var $resources array() *\\/\\n        foreach($resources as $resource) {\\n            $data = $modx->getObject(\'resourceData\', array(\'resourcedata_id\' => $resource->get(\'id\')));\\n            if ($data) {\\n                $data->remove();\\n            }\\n        }\\n\\n        break;\\n}\\nreturn;"}',
        'guid' => 'b125e072e950015ad2adfd0681550f77',
        'native_key' => 1,
        'signature' => '6eabe1db7afe437d15d5c1d3977ec3b0',
      ),
      '9746a4fb106389ebe9a9eeef9aa8a25e' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modPlugin',
        'object' => '{"id":2,"source":0,"property_preprocess":0,"name":"ExtraUserFields","description":"Add and process extra fields in Create\\/Edit User form","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\n * ExtraUserFields plugin for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 12-10-2013\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Add and process extra fields in Create\\/Edit User form\\n *\\n * Variables\\n * ---------\\n *\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n *\\n * Events: OnUserFormPrerender, OnUserFormRender, OnUserFormSave\\n *\\n **\\/\\n\\n\\/* Define extra fields *\\/\\n$fields = array();\\n\\n\\/* Make sure we have an extUser object to work with *\\/\\nif (isset($user) && ($user instanceof  modUser)) {\\n    $data = $modx->getObject(\'userData\', array(\'userdata_id\' => $user->get(\'id\')));\\n}\\n\\/* @var $data userData *\\/\\n\\n\\/* Create related object if it doesn\'t exist *\\/\\nif (!$data) {\\n    $data = $modx->newObject(\'userData\');\\n}\\n\\nif ($data) {\\n    $fields = $data->toArray();\\n}\\n\\nswitch ($modx->event->name) {\\n    case \'OnUserFormPrerender\':\\n        \\/* if you want to add custom scripts, css, etc, register them here *\\/\\n        break;\\n    case \'OnUserFormRender\':\\n\\n        if ($data) {\\n            \\/* Set fields with values from DB (if any) *\\/\\n            foreach ($fields as $key => $value) {\\n                $dbValue = $data->get($key);\\n                \\/* Make sure there are no null values *\\/\\n                $dbValue = $dbValue === null? \'\' : $dbValue;\\n                $fields[$key] = $dbValue;\\n            }\\n        }\\n\\n        \\/* Now do the HTML *\\/\\n        $extraFields = $modx->getChunk(\'MyExtraUserFields\', $fields);\\n\\n        \\/* Add our custom fields to the Create\\/Edit User form *\\/\\n        $modx->event->output($extraFields);\\n        break;\\n\\n\\n    case \'OnUserFormSave\':\\n        \\/* do processing logic here. *\\/\\n        \\/* @var $user extUser *\\/\\n        if (!$data) {\\n            $modx->log(modX::LOG_LEVEL_ERROR, \'[ExtraUserFields] No Data object\');\\n            return;\\n        }\\n        if (!$user) {\\n            $modx->log(modX::LOG_LEVEL_ERROR, \'[ExtraUserFields] No User object\');\\n            return;\\n        }\\n        $data->set(\'userdata_id\', $user->get(\'id\'));\\n        $fields = array_keys($fields);\\n        $postKeys = array_keys($_POST);\\n        $dirty = false;\\n\\n        foreach($fields as $field) {\\n            if ($field === \'id\') {\\n                continue;\\n            }\\n            if (in_array($field, $postKeys)) {\\n                \\/* Convert NULL to \'\', but preserve \'0\' *\\/\\n                if (empty($_POST[$field]) && ($_POST[$field] !== \'0\')) {\\n                    $_POST[$field] = \'\';\\n                }\\n                \\/* If $_POST values don\'t match DB value,\\n                   update field and set dirty flag *\\/\\n                if ($_POST[$field] !== $data->get($field)) {\\n                    $data->set($field, $_POST[$field]);\\n                    $dirty = true;\\n                }\\n            }\\n        }\\n\\n        \\/* Set registration date to today - delete if not needed *\\/\\n        $rDate = $data->get(\'registrationDate\');\\n        if (empty($rDate)) {\\n            $dirty = true;\\n            $data->set(\'registrationDate\', strtotime(date(\'Y-m-d\')));\\n        }\\n        \\/* End of registration date section *\\/\\n\\n        \\/* Save the data, if necessary *\\/\\n        if ($dirty) {\\n            $data->save();\\n        }\\n\\n        break;\\n    case \'OnUserRemove\':\\n        $extData = $modx->getObject(\'userData\', array(\'userdata_id\' => $user->get(\'id\')));\\n        if ($extData) {\\n            $extData->remove();\\n        }\\n        break;\\n}\\nreturn \'\';","locked":0,"properties":null,"disabled":1,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * ExtraUserFields plugin for ClassExtender extra\\n *\\n * Copyright 2012-2019 Bob Ray <https:\\/\\/bobsguides.com>\\n * Created on 12-10-2013\\n *\\n * ClassExtender is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * ClassExtender is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * ClassExtender; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package classextender\\n *\\/\\n\\n\\/**\\n * Description\\n * -----------\\n * Add and process extra fields in Create\\/Edit User form\\n *\\n * Variables\\n * ---------\\n *\\n * @var $modx modX\\n * @var $scriptProperties array\\n *\\n * @package classextender\\n *\\n * Events: OnUserFormPrerender, OnUserFormRender, OnUserFormSave\\n *\\n **\\/\\n\\n\\/* Define extra fields *\\/\\n$fields = array();\\n\\n\\/* Make sure we have an extUser object to work with *\\/\\nif (isset($user) && ($user instanceof  modUser)) {\\n    $data = $modx->getObject(\'userData\', array(\'userdata_id\' => $user->get(\'id\')));\\n}\\n\\/* @var $data userData *\\/\\n\\n\\/* Create related object if it doesn\'t exist *\\/\\nif (!$data) {\\n    $data = $modx->newObject(\'userData\');\\n}\\n\\nif ($data) {\\n    $fields = $data->toArray();\\n}\\n\\nswitch ($modx->event->name) {\\n    case \'OnUserFormPrerender\':\\n        \\/* if you want to add custom scripts, css, etc, register them here *\\/\\n        break;\\n    case \'OnUserFormRender\':\\n\\n        if ($data) {\\n            \\/* Set fields with values from DB (if any) *\\/\\n            foreach ($fields as $key => $value) {\\n                $dbValue = $data->get($key);\\n                \\/* Make sure there are no null values *\\/\\n                $dbValue = $dbValue === null? \'\' : $dbValue;\\n                $fields[$key] = $dbValue;\\n            }\\n        }\\n\\n        \\/* Now do the HTML *\\/\\n        $extraFields = $modx->getChunk(\'MyExtraUserFields\', $fields);\\n\\n        \\/* Add our custom fields to the Create\\/Edit User form *\\/\\n        $modx->event->output($extraFields);\\n        break;\\n\\n\\n    case \'OnUserFormSave\':\\n        \\/* do processing logic here. *\\/\\n        \\/* @var $user extUser *\\/\\n        if (!$data) {\\n            $modx->log(modX::LOG_LEVEL_ERROR, \'[ExtraUserFields] No Data object\');\\n            return;\\n        }\\n        if (!$user) {\\n            $modx->log(modX::LOG_LEVEL_ERROR, \'[ExtraUserFields] No User object\');\\n            return;\\n        }\\n        $data->set(\'userdata_id\', $user->get(\'id\'));\\n        $fields = array_keys($fields);\\n        $postKeys = array_keys($_POST);\\n        $dirty = false;\\n\\n        foreach($fields as $field) {\\n            if ($field === \'id\') {\\n                continue;\\n            }\\n            if (in_array($field, $postKeys)) {\\n                \\/* Convert NULL to \'\', but preserve \'0\' *\\/\\n                if (empty($_POST[$field]) && ($_POST[$field] !== \'0\')) {\\n                    $_POST[$field] = \'\';\\n                }\\n                \\/* If $_POST values don\'t match DB value,\\n                   update field and set dirty flag *\\/\\n                if ($_POST[$field] !== $data->get($field)) {\\n                    $data->set($field, $_POST[$field]);\\n                    $dirty = true;\\n                }\\n            }\\n        }\\n\\n        \\/* Set registration date to today - delete if not needed *\\/\\n        $rDate = $data->get(\'registrationDate\');\\n        if (empty($rDate)) {\\n            $dirty = true;\\n            $data->set(\'registrationDate\', strtotime(date(\'Y-m-d\')));\\n        }\\n        \\/* End of registration date section *\\/\\n\\n        \\/* Save the data, if necessary *\\/\\n        if ($dirty) {\\n            $data->save();\\n        }\\n\\n        break;\\n    case \'OnUserRemove\':\\n        $extData = $modx->getObject(\'userData\', array(\'userdata_id\' => $user->get(\'id\')));\\n        if ($extData) {\\n            $extData->remove();\\n        }\\n        break;\\n}\\nreturn \'\';"}',
        'guid' => 'cfa088158fcaf92b3b8f6de9f9943a2e',
        'native_key' => 2,
        'signature' => '08f84257d884c045acb7cacf9285041d',
      ),
    ),
  ),
  'abort_install_on_vehicle_fail' => true,
  'related_object_attributes' => 
  array (
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Plugins' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'classextender',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"classextender-2.2.0-pl\\/modCategory\\/a6c40da431749d1c47357a1503f6abb1\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"classextender"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"classextender-2.2.0-pl\\/modCategory\\/a6c40da431749d1c47357a1503f6abb1\\/1\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"classextender"}',
    ),
    2 => 
    array (
      'type' => 'php',
      'body' => '{"source":"classextender-2.2.0-pl\\/modCategory\\/a6c40da431749d1c47357a1503f6abb1.plugin.resolver.resolver","type":"php","name":"plugin.resolver"}',
    ),
    3 => 
    array (
      'type' => 'php',
      'body' => '{"source":"classextender-2.2.0-pl\\/modCategory\\/a6c40da431749d1c47357a1503f6abb1.resource.resolver.resolver","type":"php","name":"resource.resolver"}',
    ),
    4 => 
    array (
      'type' => 'php',
      'body' => '{"source":"classextender-2.2.0-pl\\/modCategory\\/a6c40da431749d1c47357a1503f6abb1.classextender.resolver.resolver","type":"php","name":"classextender.resolver"}',
    ),
  ),
  'validate' => 
  array (
    0 => 
    array (
      'type' => 'php',
      'body' => '{"source":"classextender-2.2.0-pl\\/modCategory\\/a6c40da431749d1c47357a1503f6abb1.classextender.validator.validator","type":"php","name":"classextender.validator"}',
    ),
  ),
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => 'bc66b589f2eb79d5e1d8bbec872ffcfb',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => 'a6c40da431749d1c47357a1503f6abb1',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"ClassExtender","rank":0}',
);